TT %>% filter(number == 1) %>%
count(date, username, name) %>%
filter(n == 2)
TT %>% filter(number == 1) %>%
count(date, username, name) %>%
filter(n == 2)
library(tidyverse)
TT %>% filter(number == 1) %>%
count(date, username, name) %>%
filter(n == 2)
quarto_version()
quarto_path()
TT
TT <- readRDS(file = "../input/TitledTuesday_2023_df.RDS")
library(tidyverse)
library(patchwork)     # combine charts together
library(DT)            # interactive tables
library(knitr)         # static table with the kable() function
library(plotly)
getwd()
TT <- readRDS(file = "input/TitledTuesday_2023_df.RDS")
player_df <- readRDS(file = "input/player_2023_df.RDS")
matches_df <- readRDS(file = "input/matches_2023_df.RDS")
results_df <- readRDS(file = "input/results_2023_df.RDS")
tournament_streak <- readRDS(file = "input/tournament_streak_2023_df.RDS")
winning_streak <- readRDS(file = "input/winning_streak_2023_df.RDS")
week_streak <- readRDS(file = "input/week_streak_2023_df.RDS")
player_df %>%
filter(N_participations >= 10,
title_ordered %in% c("GM", "IM", "FM", "CM", "NM")) %>%
ggplot(aes(x = rating_best, y = score, label = name)) +
geom_point(color = "grey", alpha = 0.5) +
geom_point(data = player_df %>% filter(N_participations >= 10, title_ordered %in% c("IM")),
mapping = aes(x = rating_best, y = score), color = "#E69F00", alpha = 0.6) +
geom_point(data = player_df %>% filter(N_participations >= 10, title_ordered %in% c("GM")),
mapping = aes(x = rating_best, y = score), color = "#0072B2", alpha = 0.7) +
theme_light() +
scale_y_continuous(breaks = c(0,2,4,6,8,10), limits = c(0, 9)) +
labs(x="best rating", y="average score")
player_df$score <- round(player_df$avg_score, 1)
player_df %>%
filter(N_participations >= 10,
title_ordered %in% c("GM", "IM", "FM", "CM", "NM")) %>%
ggplot(aes(x = rating_best, y = score, label = name)) +
geom_point(color = "grey", alpha = 0.5) +
geom_point(data = player_df %>% filter(N_participations >= 10, title_ordered %in% c("IM")),
mapping = aes(x = rating_best, y = score), color = "#E69F00", alpha = 0.6) +
geom_point(data = player_df %>% filter(N_participations >= 10, title_ordered %in% c("GM")),
mapping = aes(x = rating_best, y = score), color = "#0072B2", alpha = 0.7) +
theme_light() +
scale_y_continuous(breaks = c(0,2,4,6,8,10), limits = c(0, 9)) +
labs(x="best rating", y="average score")
g <- player_df %>%
filter(N_participations >= 10,
title_ordered %in% c("GM", "IM", "FM", "CM", "NM")) %>%
ggplot(aes(x = rating_best, y = score, label = name)) +
geom_point(color = "grey", alpha = 0.5) +
geom_point(data = player_df %>% filter(N_participations >= 10, title_ordered %in% c("IM")),
mapping = aes(x = rating_best, y = score), color = "#E69F00", alpha = 0.6) +
geom_point(data = player_df %>% filter(N_participations >= 10, title_ordered %in% c("GM")),
mapping = aes(x = rating_best, y = score), color = "#0072B2", alpha = 0.7) +
theme_light() +
scale_y_continuous(breaks = c(0,2,4,6,8,10), limits = c(0, 9)) +
labs(x="best rating", y="average score")
ggplotly(g)
names(player_df)
source("E:/The Data Digest/GitHub/Chess/R/1_create_data_frames.R", echo=TRUE)
source("E:/The Data Digest/GitHub/Chess/R/1_create_data_frames.R", echo=TRUE)
source("E:/The Data Digest/GitHub/Chess/R/1_create_data_frames.R", echo=TRUE)
TT
temp_names <- TT %>% filter(date %in% temp_dates,
number %in% 1) %>% # show second place?
arrange(date, time) %>%
select(date, time, number, fed, title, name, username, score) %>%
pull(name) %>% unique()
TT %>% filter(number == 1) %>%
count(name, date) %>%
filter(n == 2) %>%
arrange(date) %>% pull(date)
temp_dates <- TT %>% filter(number == 1) %>%
count(name, date) %>%
filter(n == 2) %>%
arrange(date) %>% pull(date)
TT %>% filter(date %in% temp_dates,
number %in% 1) %>% # show second place?
arrange(date, time) %>%
select(date, time, number, fed, title, name, username, score) %>%
pull(name) %>% unique()
temp_names <- TT %>% filter(date %in% temp_dates,
number %in% 1) %>% # show second place?
arrange(date, time) %>%
select(date, time, number, fed, title, name, username, score) %>%
pull(name) %>% unique()
same_day_part <- TT %>% filter(name %in% temp_names) %>%
count(name, date) %>% # show line by line
filter(n == 2) %>% count(name, sort = TRUE) %>%
arrange(n)
same_day_part
win_both <- TT %>% filter(number == 1) %>%
count(date, username, name) %>%
filter(n == 2) %>% pull(date)
win_both2 <- TT %>% filter(number %in% 1:2) %>%
count(date, username, name) %>%
filter(n == 2) %>% arrange(date) %>% pull(date)
came_close <- win_both2[!win_both2 %in% win_both]
coming_close <- TT %>% filter(date %in% came_close, number %in% 1:2) %>%
select(date, time, number, name, score, buchholz_cut_1)
coming_close
#| layout-ncol: 1
ladies <- TT %>% filter(gender == "Women") %>% pull(name) %>% unique()
TT %>% filter(name %in% ladies) %>% arrange(file_name, number) %>% group_by(file_name) %>% slice_head(n = 1) %>% ungroup() %>%
count(name, sort = TRUE)
source("E:/The Data Digest/GitHub/Chess/R/0_setup_load_clean_data.R", echo=TRUE)
source("E:/The Data Digest/GitHub/Chess/R/1_create_data_frames.R", echo=TRUE)
TT$name[TT$name == "Алёна Гармаш"]
source("E:/The Data Digest/GitHub/Chess/R/0_setup_load_clean_data.R", echo=TRUE)
source("E:/The Data Digest/GitHub/Chess/R/1_create_data_frames.R", echo=TRUE)
player_df$total_prize
TT %>% filter(name %in% ladies) %>%
arrange(file_name, number) %>%
group_by(file_name) %>% slice_head(n = 1) %>% ungroup() %>%
count(name, sort = TRUE)
TT <- readRDS(file = "../input/TitledTuesday_2023_df.RDS")
getwd()
setwd(dir = "E:/The Data Digest/GitHub/Chess/TitledTuesday_2023_Awards/")
TT <- readRDS(file = "../input/TitledTuesday_2023_df.RDS")
player_df <- readRDS(file = "../input/player_2023_df.RDS")
matches_df <- readRDS(file = "../input/matches_2023_df.RDS")
results_df <- readRDS(file = "../input/results_2023_df.RDS")
tournament_streak <- readRDS(file = "../input/tournament_streak_2023_df.RDS")
winning_streak <- readRDS(file = "../input/winning_streak_2023_df.RDS")
week_streak <- readRDS(file = "../input/week_streak_2023_df.RDS")
#| layout-ncol: 1
ladies <- TT %>% filter(gender == "Women") %>% pull(name) %>% unique()
TT %>% filter(name %in% ladies) %>%
arrange(file_name, number) %>%
group_by(file_name) %>% slice_head(n = 1) %>% ungroup() %>%
count(name, sort = TRUE)
women_prize <- TT %>% filter(name %in% ladies) %>%
arrange(file_name, number) %>%
group_by(file_name) %>% slice_head(n = 1) %>% ungroup() %>%
count(name, sort = TRUE)
TT %>% filter(name %in% ladies) %>%
arrange(file_name, number) %>%
group_by(file_name) %>% slice_head(n = 1) %>% ungroup() %>%
count(name, sort = TRUE) %>%
mutate(women_prize = n * 100) %>%
select(-n)
women_prize <- TT %>% filter(name %in% ladies) %>%
arrange(file_name, number) %>%
group_by(file_name) %>% slice_head(n = 1) %>% ungroup() %>%
count(name, sort = TRUE) %>%
mutate(women_prize = n * 100) %>%
select(-n)
player_df <- player_df %>% left_join(women_prize, by = "name")
#| layout-ncol: 1
ladies <- TT %>% filter(gender == "Women") %>% pull(name) %>% unique()
women_prize <- TT %>% filter(name %in% ladies) %>%
arrange(file_name, number) %>%
group_by(file_name) %>% slice_head(n = 1) %>% ungroup() %>%
count(name, sort = TRUE) %>%
mutate(women_prize = n * 100) %>%
select(-n)
player_df <- player_df %>% left_join(women_prize, by = "name")
kable(x = player_df %>% filter(name %in% ladies) %>% arrange(desc(women_prize)) %>% select(name, women_prize, N_participations))
player_df %>% filter(name %in% ladies) %>% arrange(desc(women_prize)) %>% select(name, women_prize, N_participations)
#| layout-ncol: 1
ladies <- TT %>% filter(gender == "Women") %>% pull(name) %>% unique()
women_prize_df <- TT %>% filter(name %in% ladies) %>%
arrange(file_name, number) %>%
group_by(file_name) %>% slice_head(n = 1) %>% ungroup() %>%
count(name, sort = TRUE) %>%
mutate(women_prize_money = n * 100) %>%
select(-n)
player_df <- player_df %>% left_join(women_prize_df, by = "name")
kable(x = player_df %>% filter(name %in% ladies) %>% arrange(desc(women_prize_money)) %>% select(name, women_prize_money, N_participations))
player_df$women_prize_money[is.na(player_df$women_prize_money)] <- 0
kable(x = player_df %>% filter(name %in% ladies) %>% arrange(desc(women_prize_money)) %>% select(name, women_prize_money, fed, N_participations))
kable(x = player_df %>% filter(name %in% ladies, women_prize_money > 0) %>% arrange(desc(women_prize_money)) %>% select(name, fed, women_prize_money, N_participations))
kable(x = player_df %>% filter(name %in% ladies, women_prize_money > 0) %>% arrange(desc(women_prize_money)) %>% select(name, fed, title, women_prize_money, N_participations))
women_df <- player_df %>% filter(name %in% women) %>%
select(name, title, fed, best_Place, avg_score, rating_best, N_participations) %>%
arrange(best_place)
View(player_df)
player_df$best_Place
women_df <- player_df %>% filter(name %in% women) %>%
select(name, title, fed, best_Place, avg_score, rating_best, N_participations) %>%
arrange(best_Place)
DT::datatable(women_df)
#| layout-ncol: 1
women <- TT %>% filter(gender == "Women") %>% pull(name) %>% unique()
women_prize_df <- TT %>% filter(name %in% women) %>%
arrange(file_name, number) %>%
group_by(file_name) %>% slice_head(n = 1) %>% ungroup() %>%
count(name, sort = TRUE) %>%
mutate(women_prize_money = n * 100) %>%
select(-n)
player_df <- player_df %>% left_join(women_prize_df, by = "name")
player_df$women_prize_money[is.na(player_df$women_prize_money)] <- 0
player_df$women_prize_money
player_df <- player_df %>% left_join(women_prize_df, by = "name")
player_df$women_prize_money
player_df$women_prize_money[is.na(player_df$women_prize_money)] <- 0
kable(x = player_df %>% filter(name %in% ladies, women_prize_money > 0) %>% arrange(desc(women_prize_money)) %>% select(name, title, fed, women_prize_money, N_participations))
women_df <- player_df %>% filter(name %in% women) %>%
select(name, title, fed, best_Place, avg_score, rating_best, N_participations) %>%
arrange(best_Place)
DT::datatable(women_df)
player_df$score
women_df <- player_df %>% filter(name %in% women) %>%
select(name, title, fed, best_Place, score, rating_best, N_participations) %>%
arrange(desc(rating_best)
DT::datatable(women_df)
women_df <- player_df %>% filter(name %in% women) %>%
select(name, title, fed, best_Place, score, rating_best, N_participations) %>%
arrange(desc(rating_best))
DT::datatable(women_df)
women_df <- player_df %>% filter(name %in% women) %>%
select(name, title, fed, best_Place, score, rating_best, N_participations) %>%
arrange(best_Place)
DT::datatable(women_df)
streak_results <- winning_streak %>%
filter(title %in% c("GM", "IM", "FM", "CM", "NM")) %>%
group_by(title) %>%
summarize(median = median(winning_streak),
mean = round(mean(winning_streak), 2),
max = max(winning_streak),
`No. of players` = n())
kable(streak_results, caption = "Winning streaks for different titles")
longest_wins <- winning_streak %>% select(name, title, fed, winning_streak) %>%
slice_(n=29)
kable(longest_wins)
winning_streak
longest_wins <- winning_streak %>% select(name, title, fed, winning_streak) %>%
slice_head(n=29)
kable(longest_wins)
getwd()
getwd()
getwd()
source("2_helper_functions.R")
# load helper functions
source("2_helper_functions.R")
# load the tidyverse
library(tidyverse)
library(patchwork)     # combine charts together
library(DT)            # interactive tables
library(knitr)         # static table with the kable() function
library(plotly)        # interactive graphs
getwd()
source("E:/The Data Digest/GitHub/Chess/R/0_setup_load_clean_data.R", echo=TRUE)
source("E:/The Data Digest/GitHub/Chess/R/1_create_data_frames.R", echo=TRUE)
source("R/2_helper_functions.R")
# Read the clean dataset
TT <- readRDS(file = "input/TitledTuesday_2023_df.RDS")
