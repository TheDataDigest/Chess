xx %>%
ggplot(aes(x = streak, color = name, fill = name)) +
geom_density(alpha = 0.05) +
theme_light()
temp_df2 <- winning_streak_df %>% filter(title == "GM",
username != "Hikaru",
username != "MagnusCarlsen") %>%
select(username, name, result, win, file_name, round) %>%
arrange(username)
usernames <- unique(temp_df2$username)
results2 <- list()
#names(results) <- usernames
for(i in 1:length(usernames)) {
results2[[i]] <- temp_df2 %>% filter(username == usernames[i]) %>% pull(win) %>%
winning_streak_distribution()
}
GM_streaks_result2 <- as.data.frame(table(unlist(results2)))
GM_streaks_result2
streak_results_df2 <- data.frame(name = "Other GMs", streak = unlist(results2))
xx <- bind_rows(streak_results_df,
streak_results_df2[sample(x = 1:nrow(streak_results_df2), size = 250, replace = FALSE), ])
xx %>%
ggplot(aes(x = streak, color = name, fill = name)) +
geom_density(alpha = 0.05) +
theme_light()
sweep_df <- TT %>% filter(number == 1) %>%
count(date, username, name) %>%
filter(n == 2) %>% select(-n)
sweep_df$attempts <- c(3, 34, 6, 23, 38, 9)
sweep_df %>%
knitr::kable(caption = "Table 6: Player who won both tournaments on the same day", digits = 0) %>%
kableExtra::kable_styling(bootstrap_options = "striped", full_width = FALSE)
# stacked bar chart / put (n) in parenthesis for encounters, sort thusly
Hikaru_results <- matches_df %>% filter(hero_name == "Hikaru Nakamura") %>%
group_by(opponent_name) %>%
count(result) %>%
add_count(wt = n) %>%
filter(nn > 2) %>%
mutate(pct = n / nn) %>%
mutate(name_N = glue('{opponent_name} ({nn})'))
Hikaru_results$result <- factor(Hikaru_results$result, levels = c("win", "draw", "lose"))
top16 <- Hikaru_results %>% select(opponent_name, nn) %>% distinct() %>% arrange(desc(nn)) %>% head(16) %>% pull(opponent_name)
Hikaru_results %>% filter(opponent_name %in% top16) %>%
ggplot(aes(y = fct_reorder(name_N, nn), x = pct,
label = pct, fill = result)) +
geom_col(position = "stack") +
scale_x_continuous(labels = scales::percent, expand = c(0, 0)) +
geom_text(aes(label = paste0(round(pct*100, 1),"%")),
position = position_stack(vjust = 0.5),
size = 3, color = "white") +
theme_light() +
scale_fill_manual(values = c("#00BA38", "#619CFF", "#F8766D")) +
labs(x = "", y = "", fill = "Result:", subtitle = "Hikaru Nakamuras most common encounters in 2023\nTitled Tuesday Tournaments")
options(knitr.kable.NA = '')
library(tidyverse)
temp_h <- Hikaru_results %>% select(opponent_name, result, n) %>% pivot_wider(names_from = "result", values_from = "n")
hikaru2 <- temp_h %>% filter(opponent_name %in% c("Fabiano Caruana", "Dmitrij Kollars", "Maxim Matlakov", "Shant Sargsyan", "Anton Korobov", "Nihal Sarin")) %>% select(opponent_name, win, draw, lose)
hikaru2 %>%
knitr::kable(caption = "Table 7: Opponents that had a positive score against Hikaru", digits = 0) %>%
kableExtra::kable_styling(bootstrap_options = "striped", full_width = FALSE)
library(tidyverse)
library(glue)
# stacked bar chart / put (n) in parenthesis for encounters, sort thusly
Magnus_results <- matches_df %>% filter(hero_name == "Magnus Carlsen") %>%
group_by(opponent_name) %>%
count(result) %>%
add_count(wt = n) %>%
#  filter(nn > 5) %>%
mutate(pct = n / nn) %>%
mutate(name_N = glue('{opponent_name} ({nn})'))
Magnus_results$result <- factor(Magnus_results$result, levels = c("win", "draw", "lose"))
top12 <- Magnus_results %>% select(opponent_name, nn) %>% distinct() %>% arrange(desc(nn)) %>% head(12) %>% pull(opponent_name)
Magnus_results %>% filter(opponent_name %in% top12) %>%
ggplot(aes(y = fct_reorder(name_N, nn), x = pct,
label = pct, fill = result)) +
geom_col(position = "stack") +
scale_x_continuous(labels = scales::percent, expand = c(0, 0)) +
geom_text(aes(label = paste0(round(pct*100, 1),"%")),
position = position_stack(vjust = 0.5),
size = 3, color = "white") +
theme_light() +
scale_fill_manual(values = c("#00BA38", "#619CFF", "#F8766D")) +
labs(x = "", y = "", fill = "Result:", subtitle = "Magnus Carlsens most common encounters in 2023\nTitled Tuesday Tournaments")
options(knitr.kable.NA = '')
temp_m <- Magnus_results %>% select(opponent_name, result, n) %>% pivot_wider(names_from = "result", values_from = "n")
magnus2 <- temp_m %>% filter(opponent_name %in% c("Fabiano Caruana", "Dimitry Andreikin", "Maksim Chigaev", "Maxime Vachier-Lagrave", "Pranav V")) %>% select(opponent_name, win, draw, lose)
magnus2 %>%
knitr::kable(caption = "Table 8: Opponents that had a positive score against Magnus Carlsen", digits = 0) %>%
kableExtra::kable_styling(bootstrap_options = "striped", full_width = FALSE)
library(tidyverse)
matches_df %>% filter(hero_name == "Hikaru Nakamura") %>%
ggplot(aes(x = opponent_rating)) +
geom_histogram(color = "darkgrey", fill = "lightgrey") +
labs(y = "", x = "Rating of Hikaru's opponenets") +
theme_light()
matches_df %>% filter(hero_name == "Magnus Carlsen") %>%
ggplot(aes(x = opponent_rating)) +
geom_histogram(color = "darkgrey", fill = "lightgrey") +
labs(y = "", x = "Rating of Magnus's opponenets") +
theme_light()
matches_df %>%
filter(hero_name %in% c("Hikaru Nakamura", "Magnus Carlsen")) %>%
ggplot(aes(x = opponent_rating, color = hero_name)) +
geom_density(size = 1) +
labs(y = "", x = "Rating of Hikarus' and Magnus' opponents", color = "Player:") +
theme(axis.ticks.y = element_blank(), axis.text.y = element_blank()) +
theme_light()
# And we can transform the rating of the opponent to a rating difference by substracting the rating of Hikaru and Magnus respectively.
# Hikarus average rating throughout 2023 was 3289 compared to Magnus' 3268.
# The average (mean and median) rating difference for Hikaru Nakamuras games was (436 and 397).
# The average (mean and median) rating difference for Magnus Carlsens games was (397 and 358).
#
# There are some negative values for both.
# The negative rating come exclusively from the cases where they faced each other.
# In 9 out of these 10 encounters Magnus had a slightly smaller rating than Hikaru.
matches_df <- matches_df %>%
mutate(rating_difference = hero_rating - opponent_rating)
# matches_df %>%
#   filter(hero_name %in% c("Hikaru Nakamura", "Magnus Carlsen")) %>%
#   ggplot(aes(x = rating_difference, color = hero_name, fill = hero_name)) +
#   geom_density(alpha = 0.05) +
#   labs(y = "", x = "Rating differences for Hikarus' and Magnus' opponenets")
matches_df %>%
filter(hero_name %in% c("Hikaru Nakamura", "Magnus Carlsen")) %>%
ggplot(aes(x = rating_difference, color = hero_name)) +
geom_density(size = 1) +
labs(y = "", x = "Rating differences for Hikarus' and Magnus' opponents", color = "Player:") +
theme(axis.ticks.y = element_blank(), axis.text.y = element_blank()) +
theme_light()
score_df <- data.frame(result = c("win", "draw", "lose"),
score = c(1, 0.5, 0))
matches_df <- matches_df %>% left_join(score_df)
matches_df %>%
filter(hero_name %in% c("Hikaru Nakamura", "Magnus Carlsen")) %>%
ggplot(aes(x = rating_difference, y = score, color = hero_name)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = 0) +
labs(y = "", x = "opponents rating difference",
subtitle = "Predicting the score for Hikaru and Magnus based on rating differences of their opponents",
color = "Player:")  +
theme_light()
matches_df %>%
filter(hero_name %in% c("Hikaru Nakamura", "Magnus Carlsen")) %>%
ggplot(aes(x = rating_difference, y = score, color = hero_name)) +
geom_point(alpha = 0.5) +
facet_wrap(~ color) +
geom_smooth(method = "lm", se = 0) +
labs(y = "", x = "opponents rating difference",
subtitle = "Predicting the score for Hikaru and Magnus based on starting color\nand rating differences of their opponents",
color = "Player:")  +
theme_light()
score_df <- data.frame(result = c("win", "draw", "lose"),
score = c(1, 0.5, 0))
matches_df <- matches_df %>% left_join(score_df)
matches_df %>%
filter(hero_name %in% c("Hikaru Nakamura", "Magnus Carlsen")) %>%
ggplot(aes(x = opponent_rating, y = score, color = hero_name)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = 0) +
labs(y = "", x = "opponents rating",
subtitle = "Predicting the score for Hikaru and Magnus based on rating of their opponents",
color = "Player:")  +
theme_light()
matches_df %>%
filter(hero_name %in% c("Hikaru Nakamura", "Magnus Carlsen")) %>%
ggplot(aes(x = opponent_rating, y = score, color = hero_name)) +
geom_point(alpha = 0.5) +
facet_wrap(~ color) +
geom_smooth(method = "lm", se = 0) +
labs(y = "", x = "opponents rating difference",
subtitle = "Predicting the score for Hikaru and Magnus based on starting color\nand rating of their opponents",
color = "Player:")  +
theme_light()
matches_df %>%
filter(hero_name %in% c("Hikaru Nakamura", "Magnus Carlsen")) %>%
ggplot(aes(x = opponent_rating, y = score, color = color)) +
geom_point(alpha = 0.5) +
facet_wrap(~ hero_name) +
geom_smooth(method = "lm", se = 0) +
labs(y = "", x = "opponents rating difference",
subtitle = "Predicting the score for Hikaru and Magnus based on starting color and rating of their opponents",
color = "Pieces:")  +
theme_light()
lm(score ~ color + rating_difference, data = matches_df %>% filter(hero_name == "Hikaru Nakamura")) %>% summary()
lm(score ~ color + rating_difference, data = matches_df %>% filter(hero_name == "Magnus Carlsen")) %>% summary()
score_df <- data.frame(result = c("win", "draw", "lose"),
score = c(1, 0.5, 0))
matches_df <- matches_df %>% left_join(score_df)
#than including player name (exclude direct games against one another)
matches_df_HN_MC <- bind_rows(matches_df %>% filter(hero_name == "Hikaru Nakamura",
opponent_name != "Magnus Carlsen"),
matches_df %>% filter(hero_name == "Magnus Carlsen",
opponent_name != "Hikaru Nakamura"))
lm(score ~ hero_name + color + rating_difference, data = matches_df_HN_MC) %>% summary()
lm(score ~ hero_name + color * rating_difference, data = matches_df_HN_MC) %>% summary()
lm(score ~ hero_name * color + rating_difference, data = matches_df_HN_MC) %>% summary()
lm(score ~ hero_name * rating_difference + color, data = matches_df_HN_MC) %>% summary()
lm(score ~ hero_name * color * rating_difference, data = matches_df_HN_MC) %>% summary()
#significant difference (knowing that one is hikaru or magnus)?
#results = 'asis'
options(knitr.kable.NA = '')
h1 <- matches_df %>%
filter(hero_name %in% c("Hikaru Nakamura"),
result == "lose") %>%
select(date_time, opponent_username, opponent_name, opponent_rating, color, result) %>%
arrange(opponent_rating) %>%
slice_head(n=10)
names(h1) <- c("Date/Time", "Opponent Username",  "Opponent Name",  "Opponent Rating", "Pieces", "Result")
h1 %>%
knitr::kable(caption = "Table 9: Lowest rated players Hikaru lost against", digits = 0) %>%
kableExtra::kable_styling(bootstrap_options = "striped", full_width = TRUE)
options(knitr.kable.NA = '')
matches_df$opponent_name[matches_df$opponent_username == "Liljon_chess"] <- "Ulugbek Tillyaev"
h2 <- matches_df %>%
filter(hero_name %in% c("Magnus Carlsen"),
result == "lose") %>%
select(date_time, opponent_username, opponent_name, opponent_rating, color, result) %>%
arrange(opponent_rating) %>%
slice_head(n=10)
names(h2) <- c("Date/Time", "Opponent Username",  "Opponent Name",  "Opponent Rating", "Pieces", "Result")
h2 %>%
knitr::kable(caption = "Table 10: Lowest rated players Magnus lost against", digits = 0) %>%
kableExtra::kable_styling(bootstrap_options = "striped", full_width = TRUE)
money
top10_money
top10_money <- player_df %>%
mutate(label_N_usd = paste0(dollar(total_prize), "\n", N_participations, " participations"),
second_fifth = N_Top5 - N_1st) %>%
select(name, N_participations, total_prize, N_1st, second_fifth, label_N_usd, N_Top5) %>%
arrange(desc(total_prize)) %>%
slice_head(n = 10) %>%
pivot_longer(cols = -c(name, N_participations, total_prize, label_N_usd, N_Top5), names_to = "places", values_to = "N")
top10_money$places <- gsub(pattern = "N_1st", replacement = "1st place", x = top10_money$places)
top10_money$places <- gsub(pattern = "second_fifth", replacement = "2nd-5th place", x = top10_money$places)
top10_money$name = factor(top10_money$name, levels = unique(top10_money$name))
top10_money$places = factor(top10_money$places, levels = c("2nd-5th place", "1st place"))
top10_money %>%
ggplot(aes(x = name, y = N, fill = places, label = N)) +
geom_col(position = "stack") +
geom_text(size = 3, position = position_stack(vjust = 0.5)) +
geom_text(data = top10_money, aes(x = name, y = N_Top5, label = label_N_usd), nudge_y = 7, size = 3) +
coord_flip() +
scale_y_continuous(limits = c(0, 50)) +
scale_x_discrete(limits=rev) +
labs(x = "", y = "# Winning the tournament or placing Top5, N participations, Total prize money",
fill = "Position:") +
guides(fill = guide_legend(reverse=T)) +
theme_light() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
top10_money %>%
ggplot(aes(x = name, y = N, fill = places, label = N)) +
geom_col(position = "stack") +
geom_text(size = 3, position = position_stack(vjust = 0.5)) +
geom_text(data = top10_money, aes(x = name, y = N_Top5, label = label_N_usd), nudge_y = 7, size = 3) +
coord_flip() +
scale_y_continuous(limits = c(0, 50)) +
scale_x_discrete(limits=rev) +
labs(x = "", y = "# Winning the tournament or placing Top5\nTotal prize money, # Participations",
fill = "Position:") +
guides(fill = guide_legend(reverse=T)) +
theme_light() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
top10_money %>%
ggplot(aes(x = name, y = N, fill = places, label = N)) +
geom_col(position = "stack") +
geom_text(size = 3, position = position_stack(vjust = 0.5)) +
geom_text(data = top10_money, aes(x = name, y = N_Top5, label = label_N_usd), nudge_y = 7, size = 3) +
coord_flip() +
scale_y_continuous(limits = c(0, 50)) +
scale_x_discrete(limits=rev) +
labs(x = "", y = "# Winning the tournament or placing Top5\nTotal prize money, # Participations",
fill = "Position:") +
guides(fill = guide_legend(reverse=T)) +
theme_light() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
top10_money %>%
ggplot(aes(x = name, y = N, fill = places, label = N)) +
geom_col(position = "stack") +
geom_text(size = 3, position = position_stack(vjust = 0.5)) +
geom_text(data = top10_money, aes(x = name, y = N_Top5, label = label_N_usd), nudge_y = 7, size = 3) +
coord_flip() +
scale_y_continuous(limits = c(0, 50)) +
scale_x_discrete(limits=rev) +
labs(x = "", y = "# Winning the tournament or placing Top5\nTotal prize money, # Participations",
fill = "Position:") +
guides(fill = guide_legend(reverse=T)) +
theme_light() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
getwd()
ggsave(units = "in", filename = "fig2_prize_money_8by6_300dpi.png",
path = "E:/The Data Digest/GitHub/Chess/images/",
width = 6, height = 8, device='png', dpi=300)
ggsave(units = "in", filename = "fig2_prize_money_8by8_300dpi.png",
path = "E:/The Data Digest/GitHub/Chess/images/",
width = 8, height = 8, device='png', dpi=300)
ggsave(units = "in", filename = "fig2_prize_money_6by8_300dpi.png",
path = "E:/The Data Digest/GitHub/Chess/images/",
width = 8, height = 6, device='png', dpi=300)
top10_money %>%
ggplot(aes(x = name, y = N, fill = places, label = N)) +
geom_col(position = "stack") +
geom_text(size = 3, position = position_stack(vjust = 0.5)) +
geom_text(data = top10_money, aes(x = name, y = N_Top5, label = label_N_usd), nudge_y = 7, size = 3) +
coord_flip() +
scale_y_continuous(limits = c(0, 50)) +
scale_x_discrete(limits=rev) +
labs(x = "", y = "# Winning the tournament or placing Top5\nTotal prize money, # Participations",
fill = "Position:") +
guides(fill = guide_legend(reverse=T)) +
theme_bs()
top10_money %>%
ggplot(aes(x = name, y = N, fill = places, label = N)) +
geom_col(position = "stack") +
geom_text(size = 3, position = position_stack(vjust = 0.5)) +
geom_text(data = top10_money, aes(x = name, y = N_Top5, label = label_N_usd), nudge_y = 7, size = 3) +
coord_flip() +
scale_y_continuous(limits = c(0, 50)) +
scale_x_discrete(limits=rev) +
labs(x = "", y = "# Winning the tournament or placing Top5\nTotal prize money, # Participations",
fill = "Position:") +
guides(fill = guide_legend(reverse=T)) +
theme_bw()
top10_money %>%
ggplot(aes(x = name, y = N, fill = places, label = N)) +
geom_col(position = "stack") +
geom_text(size = 3, position = position_stack(vjust = 0.5)) +
geom_text(data = top10_money, aes(x = name, y = N_Top5, label = label_N_usd), nudge_y = 7, size = 3) +
coord_flip() +
scale_y_continuous(limits = c(0, 50)) +
scale_x_discrete(limits=rev) +
labs(x = "", y = "# Winning the tournament or placing Top5\nTotal prize money, # Participations",
fill = "Position:") +
guides(fill = guide_legend(reverse=T)) +
theme_minimal()
top10_money %>%
ggplot(aes(x = name, y = N, fill = places, label = N)) +
geom_col(position = "stack") +
geom_text(size = 3, position = position_stack(vjust = 0.5)) +
geom_text(data = top10_money, aes(x = name, y = N_Top5, label = label_N_usd), nudge_y = 7, size = 3) +
coord_flip() +
scale_y_continuous(limits = c(0, 50)) +
scale_x_discrete(limits=rev) +
labs(x = "", y = "# Winning the tournament or placing Top5\nTotal prize money, # Participations",
fill = "Position:") +
guides(fill = guide_legend(reverse=T)) +
theme_light() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
top10_money %>%
ggplot(aes(x = name, y = N, fill = places, label = N)) +
geom_col(position = "stack") +
geom_text(size = 3, position = position_stack(vjust = 0.5)) +
geom_text(data = top10_money, aes(x = name, y = N_Top5, label = label_N_usd), nudge_y = 7, size = 3) +
coord_flip() +
scale_y_continuous(limits = c(0, 50)) +
scale_x_discrete(limits=rev) +
labs(x = "", y = "# Winning the tournament or placing Top5\nTotal prize money, # Participations",
fill = "Position:") +
guides(fill = guide_legend(reverse=T)) +
theme_light() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()))
top10_money %>%
ggplot(aes(x = name, y = N, fill = places, label = N)) +
geom_col(position = "stack") +
geom_text(size = 3, position = position_stack(vjust = 0.5)) +
geom_text(data = top10_money, aes(x = name, y = N_Top5, label = label_N_usd), nudge_y = 7, size = 3) +
coord_flip() +
scale_y_continuous(limits = c(0, 50)) +
scale_x_discrete(limits=rev) +
labs(x = "", y = "# Winning the tournament or placing Top5\nTotal prize money, # Participations",
fill = "Position:") +
guides(fill = guide_legend(reverse=T)) +
theme_light() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
top10_money %>%
ggplot(aes(x = name, y = N, fill = places, label = N)) +
geom_col(position = "stack") +
geom_text(size = 3, position = position_stack(vjust = 0.5)) +
geom_text(data = top10_money, aes(x = name, y = N_Top5, label = label_N_usd), nudge_y = 7, size = 3) +
coord_flip() +
scale_y_continuous(limits = c(0, 50)) +
scale_x_discrete(limits=rev) +
labs(x = "", y = "# Winning the tournament or placing Top5\nTotal prize money, # Participations",
fill = "Position:") +
guides(fill = guide_legend(reverse=T)) +
theme_light() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(),
panel.grid.major = element_blank())
top10_money %>%
ggplot(aes(x = name, y = N, fill = places, label = N)) +
geom_col(position = "stack") +
geom_text(size = 3, position = position_stack(vjust = 0.5)) +
geom_text(data = top10_money, aes(x = name, y = N_Top5, label = label_N_usd), nudge_y = 7, size = 3) +
coord_flip() +
scale_y_continuous(limits = c(0, 50)) +
scale_x_discrete(limits=rev) +
labs(x = "", y = "# Winning the tournament or placing Top5\nTotal prize money, # Participations",
fill = "Position:") +
guides(fill = guide_legend(reverse=T)) +
theme_light() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(),
panel.grid.minor = element_blank())
top10_money %>%
ggplot(aes(x = name, y = N, fill = places, label = N)) +
geom_col(position = "stack") +
geom_text(size = 3, position = position_stack(vjust = 0.5)) +
geom_text(data = top10_money, aes(x = name, y = N_Top5, label = label_N_usd), nudge_y = 7, size = 3) +
coord_flip() +
scale_y_continuous(limits = c(0, 50)) +
scale_x_discrete(limits=rev) +
labs(x = "", y = "# Winning the tournament or placing Top5\nTotal prize money, # Participations",
fill = "Position:") +
guides(fill = guide_legend(reverse=T)) +
theme_light() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
ggsave(units = "in", filename = "fig2_prize_money_6by8_300dpi_noGrid.png",
path = "E:/The Data Digest/GitHub/Chess/images/",
width = 8, height = 6, device='png', dpi=300)
ggsave(units = "in", filename = "fig2_prize_money_6by8_300dpi_noGrid.tiff",
path = "E:/The Data Digest/GitHub/Chess/images/",
width = 8, height = 6, device='tiff', dpi=300)
ggsave(units = "in", filename = "fig2_prize_money_6by8_300dpi_noGrid.pdf",
path = "E:/The Data Digest/GitHub/Chess/images/",
width = 8, height = 6, device='pdf', dpi=300)
?ggsave
Hikaru_results %>% filter(opponent_name %in% top16) %>%
ggplot(aes(y = fct_reorder(name_N, nn), x = pct,
label = pct, fill = result)) +
geom_col(position = "stack") +
scale_x_continuous(labels = scales::percent, expand = c(0, 0)) +
geom_text(aes(label = paste0(round(pct*100, 1),"%")),
position = position_stack(vjust = 0.5),
size = 3, color = "white") +
theme_light() +
scale_fill_manual(values = c("#00BA38", "#619CFF", "#F8766D")) +
labs(x = "", y = "", fill = "Result:", subtitle = "Hikaru Nakamuras most common encounters in 2023\nTitled Tuesday Tournaments")
Hikaru_results
View(Hikaru_results)
ggsave(units = "in", filename = "fig5_hikaru_matches_8by6_300dpi_noGrid.png",
path = "E:/The Data Digest/GitHub/Chess/images/",
width = 8, height = 6, device='png', dpi=300)
ggsave(units = "in", filename = "fig5_hikaru_matches_8by6_300dpi_noGrid.pdf",
path = "E:/The Data Digest/GitHub/Chess/images/",
width = 8, height = 6, device='pdf', dpi=300)
Hikaru_results %>% filter(opponent_name %in% top16) %>%
ggplot(aes(y = fct_reorder(name_N, nn), x = pct,
label = pct, fill = result)) +
geom_col(position = "stack") +
scale_x_continuous(labels = scales::percent, expand = c(0, 0)) +
geom_text(aes(label = paste0(round(pct*100, 1),"%")),
position = position_stack(vjust = 0.5),
size = 3, color = "white") +
theme_light() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_fill_manual(values = c("#00BA38", "#619CFF", "#F8766D")) +
labs(x = "", y = "", fill = "Result:", subtitle = "Hikaru Nakamuras most common encounters in 2023\nTitled Tuesday Tournaments")
Hikaru_results %>% filter(opponent_name %in% top16) %>%
ggplot(aes(y = fct_reorder(name_N, nn), x = pct,
label = pct, fill = result)) +
geom_col(position = "stack") +
scale_x_continuous(labels = scales::percent, expand = c(0, 0)) +
geom_text(aes(label = paste0(round(pct*100, 1),"%")),
position = position_stack(vjust = 0.5),
size = 3, color = "white") +
theme_light() +
theme(
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_fill_manual(values = c("#00BA38", "#619CFF", "#F8766D")) +
labs(x = "", y = "", fill = "Result:", subtitle = "Hikaru Nakamuras most common encounters in 2023\nTitled Tuesday Tournaments")
Hikaru_results %>% filter(opponent_name %in% top16) %>%
ggplot(aes(y = fct_reorder(name_N, nn), x = pct,
label = pct, fill = result)) +
geom_col(position = "stack") +
scale_x_continuous(labels = scales::percent, expand = c(0, 0)) +
geom_text(aes(label = paste0(round(pct*100, 1),"%")),
position = position_stack(vjust = 0.5),
size = 3, color = "white") +
theme_light() +
theme(
panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_fill_manual(values = c("#00BA38", "#619CFF", "#F8766D")) +
labs(x = "", y = "", fill = "Result:", subtitle = "Hikaru Nakamuras most common encounters in 2023\nTitled Tuesday Tournaments")
ggsave(units = "in", filename = "fig5_hikaru_matches_8by6_300dpi_noGrid.png",
path = "E:/The Data Digest/GitHub/Chess/images/",
width = 8, height = 6, device='png', dpi=300)
ggsave(units = "in", filename = "fig5_hikaru_matches_8by6_300dpi_noGrid.pdf",
path = "E:/The Data Digest/GitHub/Chess/images/",
width = 8, height = 6, device='pdf', dpi=300)
Magnus_results %>% filter(opponent_name %in% top12) %>%
ggplot(aes(y = fct_reorder(name_N, nn), x = pct,
label = pct, fill = result)) +
geom_col(position = "stack") +
scale_x_continuous(labels = scales::percent, expand = c(0, 0)) +
geom_text(aes(label = paste0(round(pct*100, 1),"%")),
position = position_stack(vjust = 0.5),
size = 3, color = "white") +
theme_light() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
scale_fill_manual(values = c("#00BA38", "#619CFF", "#F8766D")) +
labs(x = "", y = "", fill = "Result:", subtitle = "Magnus Carlsens most common encounters in 2023\nTitled Tuesday Tournaments")
ggsave(units = "in", filename = "fig6_magnus_matches_8by6_300dpi_noGrid.png",
path = "E:/The Data Digest/GitHub/Chess/images/",
width = 8, height = 5, device='pnp', dpi=300)
ggsave(units = "in", filename = "fig6_magnus_matches_8by6_300dpi_noGrid.png",
path = "E:/The Data Digest/GitHub/Chess/images/",
width = 8, height = 5, device='png', dpi=300)
ggsave(units = "in", filename = "fig6_magnus_matches_8by6_300dpi_noGrid.pdf",
path = "E:/The Data Digest/GitHub/Chess/images/",
width = 8, height = 5, device='pdf', dpi=300)
