width = 8, height = 5, device='pdf', dpi=300)
ls()
View(TT)
prize_money
lm(score ~ hero_name + color + rating_difference, data = matches_df_HN_MC) %>% summary()
# load helper functions
source("../R/2_helper_functions.R")
# load the tidyverse
library(tidyverse)
library(patchwork)     # combine charts together
library(DT)            # interactive tables
library(knitr)         # static table with the kable() function
library(plotly)        # interactive graphs
library(glue)
# Read the clean dataset
TT <- readRDS(file = "../input/TitledTuesday_2023_df.RDS")
player_df <- readRDS(file = "../input/player_2023_df.RDS")
matches_df <- readRDS(file = "../input/matches_2023_df.RDS")
results_df <- readRDS(file = "../input/results_2023_df.RDS")
tournament_streak <- readRDS(file = "../input/tournament_streak_2023_df.RDS")
winning_streak <- readRDS(file = "../input/winning_streak_2023_df.RDS")
week_streak <- readRDS(file = "../input/week_streak_2023_df.RDS")
winning_streak_df <- readRDS(file = "../input/winning_streak_df_2023_df.RDS")
lm(score ~ color + rating_difference, data = matches_df %>% filter(hero_name == "Hikaru Nakamura")) %>% summary()
matches_df
lm(score ~ color + rating_difference, data = matches_df %>% filter(hero_name == "Hikaru Nakamura")) %>% summary()
source("../R/2_helper_functions.R")
# load the tidyverse
library(tidyverse)
library(patchwork)     # combine charts together
library(DT)            # interactive tables
library(knitr)         # static table with the kable() function
library(plotly)        # interactive graphs
library(glue)
TT <- readRDS(file = "../input/TitledTuesday_2023_df.RDS")
player_df <- readRDS(file = "../input/player_2023_df.RDS")
matches_df <- readRDS(file = "../input/matches_2023_df.RDS")
results_df <- readRDS(file = "../input/results_2023_df.RDS")
tournament_streak <- readRDS(file = "../input/tournament_streak_2023_df.RDS")
winning_streak <- readRDS(file = "../input/winning_streak_2023_df.RDS")
week_streak <- readRDS(file = "../input/week_streak_2023_df.RDS")
winning_streak_df <- readRDS(file = "../input/winning_streak_df_2023_df.RDS")
dt1 <- player_df %>%
filter(N_participations > 1) %>%
#  select(name, title, fed, N_participations, best_Place, avg_score, rating_best, winning_chance) %>%
select(name, username, title, fed, everything(), -score, -title_ordered) %>%
arrange(desc(avg_score))
top10_money <- player_df %>%
mutate(label_N_usd = paste0(dollar(total_prize), ",\n", N_participations, " participations"),
second_fifth = N_Top5 - N_1st) %>%
select(name, N_participations, total_prize, N_1st, second_fifth, label_N_usd, N_Top5) %>%
arrange(desc(total_prize)) %>%
slice_head(n = 10) %>%
pivot_longer(cols = -c(name, N_participations, total_prize, label_N_usd, N_Top5), names_to = "places", values_to = "N")
library(scales)
pivot_longer(cols = -c(name, N_participations, total_prize, label_N_usd, N_Top5), names_to = "places", values_to = "N")
winning_streak %>% ungroup() %>%
filter(winning_streak >= 11) %>%
arrange(desc(winning_streak)) %>%
slice_head(n=30) %>%
knitr::kable(caption = "Table 5: Player with a winning streak of 11 or higher", digits = 2) %>%
kableExtra::kable_styling(bootstrap_options = "striped", full_width = FALSE)
hikaru_wins <- matches_df %>% filter(username == "Hikaru") %>% pull(result) == "win"
magnus_wins <- matches_df %>% filter(username == "MagnusCarlsen") %>% pull(result) == "win"
hikaru_streak_results <- winning_streak_distribution(hikaru_wins)
magnus_streak_results <- winning_streak_distribution(magnus_wins)
streak_results_df <- data.frame(name = c(rep(x = "Hikaru Nakamura", times = length(hikaru_streak_results)),
rep(x = "Magnus Carlsen", times = length(magnus_streak_results))),
streak = c(hikaru_streak_results, magnus_streak_results))
hikaru_wins <- winning_streak_df %>% filter(username == "Hikaru") %>% pull(win)
magnus_wins <- winning_streak_df %>% filter(username == "MagnusCarlsen") %>% pull(win)
hikaru_streak_results <- winning_streak_distribution(hikaru_wins)
magnus_streak_results <- winning_streak_distribution(magnus_wins)
streak_results_df <- data.frame(name = c(rep(x = "Hikaru Nakamura", times = length(hikaru_streak_results)),
rep(x = "Magnus Carlsen", times = length(magnus_streak_results))),
streak = c(hikaru_streak_results, magnus_streak_results))
matches_df$res <- matches_df$result == "win"
temp_df <- matches_df %>% filter(title == "GM",
username != "Hikaru",
username != "MagnusCarlsen") %>%
select(username, hero_name, date_time, res) %>%
arrange(username)
usernames <- unique(temp_df$username)
results <- list()
#names(results) <- usernames
for(i in 1:length(usernames)) {
results[[i]] <- temp_df %>% filter(username == usernames[i]) %>% pull(res) %>%
winning_streak_distribution()
}
streak_results_df1 <- data.frame(name = "Other GMs", streak = unlist(results))
xx <- bind_rows(streak_results_df,
streak_results_df1[sample(x = 1:nrow(streak_results_df1), size = 250, replace = FALSE), ])
xx %>%
ggplot(aes(x = streak, color = name, fill = name)) +
geom_density(alpha = 0.05) +
theme_light()
temp_df2 <- winning_streak_df %>% filter(title == "GM",
username != "Hikaru",
username != "MagnusCarlsen") %>%
select(username, name, result, win, file_name, round) %>%
arrange(username)
usernames <- unique(temp_df2$username)
results2 <- list()
#names(results) <- usernames
for(i in 1:length(usernames)) {
results2[[i]] <- temp_df2 %>% filter(username == usernames[i]) %>% pull(win) %>%
winning_streak_distribution()
}
#names(results) <- usernames
for(i in 1:length(usernames)) {
results2[[i]] <- temp_df2 %>% filter(username == usernames[i]) %>% pull(win) %>%
winning_streak_distribution()
}
GM_streaks_result2 <- as.data.frame(table(unlist(results2)))
GM_streaks_result2
# stacked bar chart / put (n) in parenthesis for encounters, sort thusly
Hikaru_results <- matches_df %>% filter(hero_name == "Hikaru Nakamura") %>%
group_by(opponent_name) %>%
count(result) %>%
add_count(wt = n) %>%
filter(nn > 2) %>%
mutate(pct = n / nn) %>%
mutate(name_N = glue('{opponent_name} ({nn})'))
Hikaru_results$result <- factor(Hikaru_results$result, levels = c("win", "draw", "lose"))
top16 <- Hikaru_results %>% select(opponent_name, nn) %>% distinct() %>% arrange(desc(nn)) %>% head(16) %>% pull(opponent_name)
Hikaru_results %>% filter(opponent_name %in% top16) %>%
ggplot(aes(y = fct_reorder(name_N, nn), x = pct,
label = pct, fill = result)) +
geom_col(position = "stack") +
scale_x_continuous(labels = scales::percent, expand = c(0, 0)) +
geom_text(aes(label = paste0(round(pct*100, 1),"%")),
position = position_stack(vjust = 0.5),
size = 3, color = "white") +
theme_light() +
scale_fill_manual(values = c("#00BA38", "#619CFF", "#F8766D")) +
labs(x = "", y = "", fill = "Result:", subtitle = "Hikaru Nakamuras most common encounters in 2023\nTitled Tuesday Tournaments")
temp_h <- Hikaru_results %>% select(opponent_name, result, n) %>% pivot_wider(names_from = "result", values_from = "n")
hikaru2 <- temp_h %>% filter(opponent_name %in% c("Fabiano Caruana", "Dmitrij Kollars", "Maxim Matlakov", "Shant Sargsyan", "Anton Korobov", "Nihal Sarin")) %>% select(opponent_name, win, draw, lose)
# stacked bar chart / put (n) in parenthesis for encounters, sort thusly
Magnus_results <- matches_df %>% filter(hero_name == "Magnus Carlsen") %>%
group_by(opponent_name) %>%
count(result) %>%
add_count(wt = n) %>%
#  filter(nn > 5) %>%
mutate(pct = n / nn) %>%
mutate(name_N = glue('{opponent_name} ({nn})'))
# stacked bar chart / put (n) in parenthesis for encounters, sort thusly
Magnus_results <- matches_df %>% filter(hero_name == "Magnus Carlsen") %>%
group_by(opponent_name) %>%
count(result) %>%
add_count(wt = n) %>%
#  filter(nn > 5) %>%
mutate(pct = n / nn) %>%
mutate(name_N = glue('{opponent_name} ({nn})'))
Magnus_results$result <- factor(Magnus_results$result, levels = c("win", "draw", "lose"))
Magnus_results$result <- factor(Magnus_results$result, levels = c("win", "draw", "lose"))
top12 <- Magnus_results %>% select(opponent_name, nn) %>% distinct() %>% arrange(desc(nn)) %>% head(12) %>% pull(opponent_name)
Magnus_results %>% filter(opponent_name %in% top12) %>%
ggplot(aes(y = fct_reorder(name_N, nn), x = pct,
label = pct, fill = result)) +
geom_col(position = "stack") +
scale_x_continuous(labels = scales::percent, expand = c(0, 0)) +
geom_text(aes(label = paste0(round(pct*100, 1),"%")),
position = position_stack(vjust = 0.5),
size = 3, color = "white") +
theme_light() +
scale_fill_manual(values = c("#00BA38", "#619CFF", "#F8766D")) +
labs(x = "", y = "", fill = "Result:", subtitle = "Magnus Carlsens most common encounters in 2023\nTitled Tuesday Tournaments")
temp_m <- Magnus_results %>% select(opponent_name, result, n) %>% pivot_wider(names_from = "result", values_from = "n")
magnus2 <- temp_m %>% filter(opponent_name %in% c("Fabiano Caruana", "Dimitry Andreikin", "Maksim Chigaev", "Maxime Vachier-Lagrave", "Pranav V")) %>% select(opponent_name, win, draw, lose)
matches_df <- matches_df %>%
mutate(rating_difference = hero_rating - opponent_rating)
score_df <- data.frame(result = c("win", "draw", "lose"),
score = c(1, 0.5, 0))
matches_df <- matches_df %>% left_join(score_df)
matches_df %>%
filter(hero_name %in% c("Hikaru Nakamura", "Magnus Carlsen")) %>%
ggplot(aes(x = rating_difference, y = score, color = hero_name)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = 0) +
labs(y = "", x = "opponents rating difference",
subtitle = "Predicting the score for Hikaru and Magnus based on rating differences of their opponents",
color = "Player:")  +
theme_light()
score_df <- data.frame(result = c("win", "draw", "lose"),
score = c(1, 0.5, 0))
matches_df <- matches_df %>% left_join(score_df)
lm(score ~ color + rating_difference, data = matches_df %>% filter(hero_name == "Hikaru Nakamura")) %>% summary()
lm(score ~ color + rating_difference, data = matches_df %>% filter(hero_name == "Magnus Carlsen")) %>% summary()
score_df <- data.frame(result = c("win", "draw", "lose"),
score = c(1, 0.5, 0))
matches_df <- matches_df %>% left_join(score_df)
#than including player name (exclude direct games against one another)
matches_df_HN_MC <- bind_rows(matches_df %>% filter(hero_name == "Hikaru Nakamura",
opponent_name != "Magnus Carlsen"),
matches_df %>% filter(hero_name == "Magnus Carlsen",
opponent_name != "Hikaru Nakamura"))
lm(score ~ hero_name + color + rating_difference, data = matches_df_HN_MC) %>% summary()
lm(score ~ hero_name + color * rating_difference, data = matches_df_HN_MC) %>% summary()
lm(score ~ hero_name * color + rating_difference, data = matches_df_HN_MC) %>% summary()
lm(score ~ hero_name + color * rating_difference, data = matches_df_HN_MC) %>% summary()
lm(score ~ hero_name * rating_difference + color, data = matches_df_HN_MC) %>% summary()
lm(score ~ hero_name * color * rating_difference, data = matches_df_HN_MC) %>% summary()
lm(score ~ hero_name + color * rating_difference, data = matches_df_HN_MC) %>% summary()
matches_df %>%
filter(hero_name %in% c("Hikaru Nakamura", "Magnus Carlsen")) %>%
ggplot(aes(x = opponent_rating, y = score, color = color)) +
geom_point(alpha = 0.5) +
facet_wrap(~ hero_name) +
geom_smooth(method = "lm", se = 0) +
labs(y = "", x = "opponents rating difference",
subtitle = "Predicting the score for Hikaru and Magnus based on starting color and rating of their opponents",
color = "Pieces:")  +
theme_light()
matches_df %>%
filter(hero_name %in% c("Hikaru Nakamura", "Magnus Carlsen")) %>%
ggplot(aes(x = opponent_rating, y = score, color = color)) +
geom_point(alpha = 0.5) +
facet_wrap(~ hero_name) +
geom_smooth(method = "loess", se = 0) +
labs(y = "", x = "opponents rating difference",
subtitle = "Predicting the score for Hikaru and Magnus based on starting color and rating of their opponents",
color = "Pieces:")  +
theme_light()
matches_df %>%
filter(hero_name %in% c("Hikaru Nakamura", "Magnus Carlsen")) %>%
ggplot(aes(x = opponent_rating, y = score, color = color)) +
geom_point(alpha = 0.5) +
facet_wrap(~ hero_name) +
geom_smooth(method = "loess", se = 0.05) +
labs(y = "", x = "opponents rating difference",
subtitle = "Predicting the score for Hikaru and Magnus based on starting color and rating of their opponents",
color = "Pieces:")  +
theme_light()
matches_df %>%
filter(hero_name %in% c("Hikaru Nakamura", "Magnus Carlsen")) %>%
ggplot(aes(x = opponent_rating, y = score, color = color)) +
geom_point(alpha = 0.5) +
facet_wrap(~ hero_name) +
geom_smooth(method = "loess", se = 0.01) +
labs(y = "", x = "opponents rating difference",
subtitle = "Predicting the score for Hikaru and Magnus based on starting color and rating of their opponents",
color = "Pieces:")  +
theme_light()
matches_df %>%
filter(hero_name %in% c("Hikaru Nakamura", "Magnus Carlsen")) %>%
ggplot(aes(x = opponent_rating, y = score, color = color)) +
geom_point(alpha = 0.5) +
facet_wrap(~ hero_name) +
geom_smooth(method = "loess", se = 0) +
labs(y = "", x = "opponents rating difference",
subtitle = "Predicting the score for Hikaru and Magnus based on starting color and rating of their opponents",
color = "Pieces:")  +
theme_light()
matches_df %>%
filter(hero_name %in% c("Hikaru Nakamura", "Magnus Carlsen")) %>%
ggplot(aes(x = opponent_rating, y = score, color = color)) +
geom_point(alpha = 0.5) +
facet_wrap(~ hero_name) +
geom_smooth(method = "lm", se = 0) +
labs(y = "", x = "opponents rating difference",
subtitle = "Predicting the score for Hikaru and Magnus based on starting color and rating of their opponents",
color = "Pieces:")  +
theme_light()
matches_df %>%
filter(hero_name %in% c("Hikaru Nakamura", "Magnus Carlsen")) %>%
ggplot(aes(x = opponent_rating, y = score, color = color)) +
geom_point(alpha = 0.5) +
facet_wrap(~ hero_name) +
geom_smooth(method = "loess", se = 0) +
labs(y = "", x = "opponents rating difference",
subtitle = "Predicting the score for Hikaru and Magnus based on starting color and rating of their opponents",
color = "Pieces:")  +
theme_light()
matches_df %>%
filter(hero_name %in% c("Hikaru Nakamura", "Magnus Carlsen")) %>%
ggplot(aes(x = opponent_rating, y = score, color = color)) +
geom_point(alpha = 0.5) +
facet_wrap(~ hero_name) +
geom_smooth(method = "lm", se = 0) +
labs(y = "", x = "opponents rating difference",
subtitle = "Predicting the score for Hikaru and Magnus based on starting color and rating of their opponents",
color = "Pieces:")  +
theme_light()
matches_df %>%
filter(hero_name %in% c("Hikaru Nakamura", "Magnus Carlsen")) %>%
ggplot(aes(x = opponent_rating, y = score, color = hero_name)) +
geom_point(alpha = 0.5) +
facet_wrap(~ color) +
geom_smooth(method = "lm", se = 0) +
labs(y = "", x = "opponents rating difference",
subtitle = "Predicting the score for Hikaru and Magnus based on starting color\nand rating of their opponents",
color = "Player:")  +
theme_light()
matches_df %>%
filter(hero_name %in% c("Hikaru Nakamura", "Magnus Carlsen")) %>%
ggplot(aes(x = opponent_rating, y = score, color = hero_name)) +
geom_point(alpha = 0.5) +
facet_wrap(~ color) +
geom_smooth(method = "loess", se = 0) +
labs(y = "", x = "opponents rating difference",
subtitle = "Predicting the score for Hikaru and Magnus based on starting color\nand rating of their opponents",
color = "Player:")  +
theme_light()
matches_df %>%
filter(hero_name %in% c("Hikaru Nakamura", "Magnus Carlsen")) %>%
ggplot(aes(x = opponent_rating, y = score, color = hero_name)) +
geom_point(alpha = 0.5) +
facet_wrap(~ color) +
geom_smooth(method = "lm", se = 0) +
labs(y = "", x = "opponents rating difference",
subtitle = "Predicting the score for Hikaru and Magnus based on starting color\nand rating of their opponents",
color = "Player:")  +
theme_light()
matches_df %>%
filter(hero_name %in% c("Hikaru Nakamura", "Magnus Carlsen")) %>%
ggplot(aes(x = opponent_rating, y = score, color = hero_name)) +
geom_point(alpha = 0.5) +
facet_wrap(~ color) +
geom_smooth(method = "loess", se = 0) +
labs(y = "", x = "opponents rating difference",
subtitle = "Predicting the score for Hikaru and Magnus based on starting color\nand rating of their opponents",
color = "Player:")  +
theme_light()
matches_df %>%
filter(hero_name %in% c("Hikaru Nakamura", "Magnus Carlsen")) %>%
ggplot(aes(x = opponent_rating, y = score, color = hero_name)) +
geom_point(alpha = 0.5) +
facet_wrap(~ color) +
geom_smooth(method = "loess", se = 1) +
labs(y = "", x = "opponents rating difference",
subtitle = "Predicting the score for Hikaru and Magnus based on starting color\nand rating of their opponents",
color = "Player:")  +
theme_light()
matches_df %>%
filter(hero_name %in% c("Hikaru Nakamura", "Magnus Carlsen")) %>%
ggplot(aes(x = opponent_rating, y = score, color = hero_name)) +
geom_point(alpha = 0.5) +
facet_wrap(~ color) +
geom_smooth(method = "loess", se = 0.95) +
labs(y = "", x = "opponents rating difference",
subtitle = "Predicting the score for Hikaru and Magnus based on starting color\nand rating of their opponents",
color = "Player:")  +
theme_light()
matches_df %>%
filter(hero_name %in% c("Hikaru Nakamura", "Magnus Carlsen")) %>%
ggplot(aes(x = opponent_rating, y = score, color = hero_name)) +
geom_point(alpha = 0.5) +
facet_wrap(~ color) +
geom_smooth(method = "lm", se = 0) +
labs(y = "", x = "opponents rating difference",
subtitle = "Predicting the score for Hikaru and Magnus based on starting color\nand rating of their opponents",
color = "Player:")  +
theme_light()
matches_df %>%
filter(hero_name %in% c("Hikaru Nakamura", "Magnus Carlsen")) %>%
ggplot(aes(x = opponent_rating, y = score, color = hero_name)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = 0) +
labs(y = "", x = "opponents rating",
subtitle = "Predicting the score for Hikaru and Magnus based on rating of their opponents",
color = "Player:")  +
theme_light()
matches_df %>%
filter(hero_name %in% c("Hikaru Nakamura", "Magnus Carlsen")) %>%
ggplot(aes(x = opponent_rating, y = score, color = hero_name)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "loess", se = 0) +
labs(y = "", x = "opponents rating",
subtitle = "Predicting the score for Hikaru and Magnus based on rating of their opponents",
color = "Player:")  +
theme_light()
matches_df %>%
filter(hero_name %in% c("Hikaru Nakamura", "Magnus Carlsen")) %>%
ggplot(aes(x = opponent_rating, y = score, color = hero_name)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "loess", se = 0.95) +
labs(y = "", x = "opponents rating",
subtitle = "Predicting the score for Hikaru and Magnus based on rating of their opponents",
color = "Player:")  +
theme_light()
matches_df %>%
filter(hero_name %in% c("Hikaru Nakamura", "Magnus Carlsen")) %>%
ggplot(aes(x = opponent_rating, y = score, color = hero_name)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = 0.95) +
labs(y = "", x = "opponents rating",
subtitle = "Predicting the score for Hikaru and Magnus based on rating of their opponents",
color = "Player:")  +
theme_light()
matches_df %>%
filter(hero_name %in% c("Hikaru Nakamura", "Magnus Carlsen")) %>%
ggplot(aes(x = opponent_rating, y = score, color = hero_name)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = 0) +
labs(y = "", x = "opponents rating",
subtitle = "Predicting the score for Hikaru and Magnus based on rating of their opponents",
color = "Player:")  +
theme_light()
TT_magnus <- TT %>% filter(username == "MagnusCarlsen") %>% pull(date_time)
TT_hikaru <- TT %>% filter(username == "Hikaru") %>% pull(date_time)
TT_magnus
TT_hikaru
intersect(TT_magnus, TT_hikaru)
date_both <- intersect(TT_magnus, TT_hikaru)
TT %>% filter(date_time %in% date_both) %>%
filter(username %in% c("MagnusCarlse", "Hikaru")) %>%
group_by(username)
TT %>% filter(date_time %in% date_both) %>%
filter(username %in% c("MagnusCarlse", "Hikaru")) %>%
group_by(username) %>%
summarize(median(number),
mean(score),
mean(prize2))
TT %>% filter(date_time %in% date_both) %>%
filter(username %in% c("MagnusCarlsen", "Hikaru")) %>%
group_by(username) %>%
summarize(median(number),
mean(score),
mean(prize2))
TT %>% filter(date_time %in% date_both) %>%
filter(username %in% c("MagnusCarlsen", "Hikaru")) %>%
group_by(username) %>%
summarize(median(number),
mean(score),
mean(prize2),
mean(games_played))
TT %>% filter(date_time %in% date_both) %>%
filter(username %in% c("MagnusCarlsen", "Hikaru")) %>%
group_by(username) %>%
summarize(median(number),
mean(number),
mean(score),
mean(prize2),
mean(games_played))
TT %>% filter(date_time %in% date_both) %>%
filter(username %in% c("MagnusCarlsen", "Hikaru")) %>%
group_by(username) %>%
summarize(median_place = median(number),
avg_place = mean(number),
avg_score = mean(score),
avg_prize = mean(prize2),
avg_games = mean(games_played))
TT %>% filter(date_time %in% date_both) %>%
filter(username %in% c("MagnusCarlsen", "Hikaru")) %>%
group_by(username) %>%
summarize(median_place = median(number),
avg_place = mean(number),
avg_score = mean(score),
avg_prize = mean(prize2),
avg_games_played = mean(games_played),
mean(rating))
TT %>% filter(date_time %in% date_both) %>%
filter(username %in% c("MagnusCarlsen", "Hikaru")) %>%
group_by(username) %>%
summarize(median_place = median(number),
avg_place = mean(number),
avg_score = mean(score),
avg_prize = mean(prize2),
avg_games_played = mean(games_played))
glm(score ~ hero_name + color + rating_difference, data = matches_df_HN_MC, family = "gaussian") %>% summary()
glm(score ~ hero_name + color + rating_difference, data = matches_df_HN_MC, family = gaussian(link = "identity")) %>% summary()
TT %>% filter(date_time %in% date_both) %>%
filter(username %in% c("MagnusCarlsen", "Hikaru")) %>% View()
matches_df %>%
filter(hero_name %in% c("Hikaru Nakamura", "Magnus Carlsen")) %>%
ggplot(aes(x = opponent_rating, y = score, color = color)) +
geom_point(alpha = 0.5) +
facet_wrap(~ hero_name) +
geom_smooth(method = "lm", se = 0) +
labs(y = "", x = "opponents rating difference",
subtitle = "Predicting the score for Hikaru and Magnus based on starting color\nand rating of their opponents",
color = "Pieces:")  +
theme_light()
matches_df %>%
filter(hero_name %in% c("Hikaru Nakamura", "Magnus Carlsen"))
View(.Last.value)
matches_df %>%
filter(opponent_rating > 2250) %>%
filter(hero_name %in% c("Hikaru Nakamura", "Magnus Carlsen")) %>%
ggplot(aes(x = opponent_rating, y = score, color = color)) +
geom_point(alpha = 0.5) +
facet_wrap(~ hero_name) +
geom_smooth(method = "lm", se = 0) +
labs(y = "", x = "opponents rating difference",
subtitle = "Predicting the score for Hikaru and Magnus based on starting color\nand rating of their opponents",
color = "Pieces:")  +
theme_light()
matches_df %>%
filter(opponent_rating > 2250) %>%
filter(hero_name %in% c("Hikaru Nakamura", "Magnus Carlsen")) %>%
ggplot(aes(x = opponent_rating, y = score, color = hero_name)) +
geom_point(alpha = 0.5) +
facet_wrap(~ color) +
geom_smooth(method = "lm", se = 0) +
labs(y = "", x = "opponents rating difference",
subtitle = "Predicting the score for Hikaru and Magnus based on starting color\nand rating of their opponents",
color = "Player:")  +
theme_light()
score_df <- data.frame(result = c("win", "draw", "lose"),
score = c(1, 0.5, 0))
matches_df <- matches_df %>% left_join(score_df)
matches_df %>%
filter(opponent_rating > 2250) %>%
filter(hero_name %in% c("Hikaru Nakamura", "Magnus Carlsen")) %>%
ggplot(aes(x = opponent_rating, y = score, color = hero_name)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = 0) +
labs(y = "", x = "opponents rating",
subtitle = "Predicting the score for Hikaru and Magnus based on rating of their opponents",
color = "Player:")  +
theme_light()
