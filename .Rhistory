summary_women[1:12,] %>% View()
summary_women[1:12,1:7] %>% View()
most_TT_wins <- player_df %>% select(name, title, fed, N_1st, N_participations) %>%
mutate(winning_pct = round(N_1st / N_participations, 3)) %>%
arrange(desc(N_1st)) %>%
filter(N_1st > 3)
most_TT_wins
highest_TT_prize <- player_df %>% select(name, title, fed, total_prize, N_participations) %>%
arrange(desc(total_prize)) %>%
slice_head(n=5)
highest_TT_prize
most_TT_wins
highest_TT_prize <- player_df %>% select(name, title, fed, total_prize, N_participations) %>%
arrange(desc(total_prize)) %>%
slice_head(n=10)
highest_TT_prize
TT %>% group_by(date_time) %>%
filter(score == max(score)) %>%
count(date_time)
TT %>% group_by(date_time) %>%
filter(score == max(score)) %>%
count(date_time) %>%
filter(n > 4)
draw2 <- TT %>% filter(date_time == "2024-02-13_early", number %in% 1:5) %>%
select(date, time, name, title, fed, score, buchholz_cut_1, rating, games_played)
draw2
draw3 <- TT %>% filter(date_time == "2024-03-05_early", number %in% 1:5) %>%
select(date, time, name, title, fed, score, buchholz_cut_1, rating, games_played)
draw3
kable(draw1)
draw1 <- TT %>% filter(date_time == "2024-01-16_early", number %in% 1:5) %>%
select(date, time, name, title, fed, score, buchholz_cut_1, rating, games_played)
draw1
# How often is the first place tied, and what was the most common tie?
draw_distribution <- TT %>% group_by(file_name) %>%
filter(score == max(score)) %>%
count(file_name) %>% ungroup() %>%
count(n) %>%
mutate(percent = round((nn / sum(nn) * 100),1))
names(draw_distribution) <- c("Player with same score", "N", "%")
draw_distribution
player_df %>% arrange(desc(score)) %>% head()
player_df %>% filter(N_participations >= 5) %>% arrange(desc(score)) %>% head()
TT$buchholz_cut_1
# 1) player_df ----
player_df <- TT %>% group_by(username) %>%
summarize(N_participations = length(unique(file_name)),
min_score = min(score),
avg_score = round(mean(score), 2),
median_score = median(score),
max_score = max(score),
best_Place = min(number),
avg_Place = round(mean(number), 1),
median_Place = median(number),
lowest_Place = max(number),
winning_chance = round(mean(number == 1), 4),
winning_pct = round(mean(number == 1)* 100, 1),
N_1st = sum(number == 1),
N_Top3 = sum(number %in% 1:3),
N_Top5 = sum(number %in% 1:5),
N_Top10 = sum(number %in% 1:10),
N_Top25 = sum(number %in% 1:25),
rating_avg = round(mean(rating), 1),
rating_best = max(rating),
rating_lowest = min(rating),
avg_prize = round(mean(prize2), 2),
total_prize = sum(prize2),
N_all_games_played = sum(games_played == 11),
avg_games_played = round(mean(games_played), 2),
median_games_played = median(games_played),
N_majority_played = sum(games_played > 5),
avg_majority_played = round(mean(games_played > 5), 2),
total_games_played = sum(games_played),
min_BhC1 = round(min(buchholz_cut_1), 2),
avg_BhC1 = round(mean(buchholz_cut_1), 2),
median_BhC1 = round(median(buchholz_cut_1), 2),
max_BhC1 = round(max(buchholz_cut_1), 2)) %>%
ungroup()
player_df %>% select(name, title, fed, avg_score, median_score, max_score, N_participations) %>%
arrange(desc(avg_score)) %>%
slice_head(n=10)
names(player_df)
player_df$fed <- TT$fed[match(player_df$username, TT$username)]
player_df$name <- TT$name[match(player_df$username, TT$username)]
player_df$title_ordered <- TT$title_ordered[match(player_df$username, TT$username)]
player_df$title <- player_df$title_ordered
player_df$score <- round(player_df$avg_score, 2)
time_df <- TT %>% group_by(username, time) %>%
summarize(N = length(unique(file_name))) %>%
pivot_wider(names_from = time, values_from = N)
player_df <- player_df %>% left_join(time_df, by = "username")
saveRDS(object = player_df, file = "input/2024_df_RDS/player_2024_df.RDS")
player_df %>% select(name, title, fed, avg_score, median_score, max_score, N_participations) %>%
arrange(desc(avg_score)) %>%
slice_head(n=10)
player_df %>% filter(N_participations >= 5) %>%
select(name, title, fed, avg_score, median_score, max_score, N_participations) %>%
arrange(desc(avg_score)) %>%
slice_head(n=10)
player_df %>% filter(N_participations >= 5) %>%
select(name, title, fed, avg_BhC1, median_BhC1, max_BhC1, N_participations) %>%
arrange(desc(avg_score)) %>%
slice_head(n=10)
player_df %>% filter(N_participations >= 5) %>%
select(name, title, fed, avg_BhC1, median_BhC1, max_BhC1, N_participations) %>%
arrange(desc(avg_BhC1)) %>%
slice_head(n=10)
player_df %>% filter(N_participations >= 5) %>%
select(name, title, fed, avg_BhC1, median_BhC1, max_BhC1, N_participations, rating_best) %>%
arrange(desc(avg_BhC1)) %>%
slice_head(n=10)
score_top10
score_top10 <- player_df %>% filter(N_participations >= 5) %>%
select(name, title, fed, avg_score, median_score, max_score, N_participations) %>%
arrange(desc(avg_score)) %>%
slice_head(n=10)
score_top10
score_top10 <- player_df %>% filter(N_participations >= 5) %>%
select(name, title, fed, avg_score, median_score, max_score, avg_games_played, N_participations) %>%
arrange(desc(avg_score)) %>%
slice_head(n=10)
score_top10
buchholz_top10 <- player_df %>% filter(N_participations >= 5) %>%
select(name, title, fed, avg_BhC1, median_BhC1, max_BhC1, N_participations, rating_best) %>%
arrange(desc(median_BhC1)) %>%
slice_head(n=10)
buchholz_top10
player_df$winning_pct
most_TT_wins
matches_df %>%
filter(result == "win")
names(matches_df)
matches_df %>%
filter(color == "white", result == "win")
results_white <- matches_df %>%
filter(color == "white", result == "win") %>%
group_by(username, hero_name) %>%
summarize(average_opponent_rating = mean(opponent_rating),
median_opponent_rating = median(opponent_rating),
N_wins_White = n()) %>% filter(N_wins_White >= 30) %>%
arrange(desc(average_opponent_rating)) %>%
slice_head(n = 10)
results_white
matches_df %>%
filter(color == "white", result == "win") %>%
group_by(username, hero_name) %>%
summarize(average_opponent_rating = mean(opponent_rating),
median_opponent_rating = median(opponent_rating),
N_wins_White = n()) %>% filter(N_wins_White >= 30) %>%
arrange(desc(average_opponent_rating)) %>%
slice_head(n = 10)
View(.Last.value)
results_white <- matches_df %>%
filter(color == "white", result == "win") %>%
group_by(username, hero_name) %>%
summarize(average_opponent_rating = mean(opponent_rating),
median_opponent_rating = median(opponent_rating),
N_wins_White = n()) %>%
filter(N_wins_White >= 30) %>% ungroup() %>% select(-username) %>%
arrange(desc(average_opponent_rating)) %>%
slice_head(n = 10)
results_white
results_black <- matches_df %>%
filter(color == "black", result == "win") %>%
group_by(username, hero_name) %>%
summarize(average_opponent_rating = round(mean(opponent_rating),1),
median_opponent_rating = median(opponent_rating),
N_wins_White = n()) %>%
filter(N_wins_White >= 30) %>% ungroup() %>% select(-username) %>%
arrange(desc(average_opponent_rating)) %>%
slice_head(n = 10)
results_black
View(player_df)
names(matches_df)
matches_df %>%
filter(hero_name %in% c("Mikhail Golubev", "David Howell", "Magnus Carlsen", "Hikaru Nakamura")) %>%
group_by(hero_name) %>%
summarize(average_opponent_difference = round(mean(hero_rating - opponent_rating),1),
median_opponent_difference = median(hero_rating - opponent_rating),
N_games = n())
head(matches_df)
matches_df %>% filter(title == "GM") %>% pull(hero_name) %>% unique()
View(matches_df)
xx <- matches_df %>%
group_by(hero_name) %>%
summarize(average_opponent_difference = round(mean(hero_rating - opponent_rating), 1),
median_opponent_difference = median(hero_rating - opponent_rating),
N_games = n())
xx
xx[xx$hero_name %in% GM_hero_name,]
GM_hero_name <- matches_df %>% filter(title == "GM") %>% pull(hero_name) %>% unique()
xx <- matches_df %>%
group_by(hero_name) %>%
summarize(average_opponent_difference = round(mean(hero_rating - opponent_rating), 1),
median_opponent_difference = median(hero_rating - opponent_rating),
N_games = n())
xx[xx$hero_name %in% GM_hero_name,]
View(.Last.value)
xx <- matches_df %>%
group_by(hero_name) %>%
summarize(average_opponent_difference = round(mean(hero_rating - opponent_rating), 1),
median_opponent_difference = median(hero_rating - opponent_rating),
N_games = n()) %>%
filter(N_games >= 30)
xx[xx$hero_name %in% GM_hero_name,]
GMs <- xx[xx$hero_name %in% GM_hero_name,]
mean(GMs$average_opponent_difference)
median(GMs$average_opponent_difference)
sd(GMs$average_opponent_difference)
mean(GMs$median_opponent_difference_opponent_difference)
mean(GMs$median_opponent_difference)
median(GMs$median_opponent_difference)
sd(GMs$median_opponent_difference)
sd(GMs$average_opponent_difference)
430-153
277/104
shapiro.test(GMs$average_opponent_difference)
shapiro.test(GMs$median_opponent_difference)
library(ggpubr)
install.packages("ggpubr")
library(ggpubr)
ggqqplot(GMs$average_opponent_difference)
GMs %>% ggplot(aes(x = average_opponent_difference)) + geom_density()
pnorm(q = 0.99, mean = 153, sd = 104)
pnorm(q = 430, mean = 153, sd = 104)
388-153
235/104
pnorm(q = 388, mean = 153, sd = 104)
657-153
504/104
pnorm(q = 657, mean = 153, sd = 104)
pnorm(q = 657, mean = 153, sd = 104)*100
TT %>% filter(date %in% dates, number %in% c(1,2)) %>% select(date_time, name, title, fed, score, buchholz_cut_1)
sweep2 <- TT %>% filter(date %in% dates, number %in% c(1,2)) %>% select(date_time, name, title, fed, score, buchholz_cut_1)
sweep2
TT$time
sweep2 <- TT %>% filter(date %in% dates, number %in% c(1,2)) %>% select(date, time, name, title, fed, score, buchholz_cut_1)
sweep2
player_df %>% names()
women_df <- player_df %>% filter(name %in% women) %>%
select(name, title, fed, best_Place, score, rating_best, N_participations, total_prize) %>%
arrange(best_Place)
women_df
kable(top_20_win_black)
top_10_win_white2 <- winning_percentages %>%
filter(name != "David Howell") %>%
filter(games_w_White >= 50,
result_color == "win_White") %>%
arrange(desc(win_white_pct)) %>%
left_join(player_df %>% select(username, name, title, fed)) %>%
select(username, name, games_w_White, win_white_pct, title, fed) %>%
slice_head(n=10)
winning_percentages
winning_percentages %>% View()
dim(women_df)
matches_df %>%
group_by(username, hero_name) %>%
summarize(total_losses = sum(first_letter == "L", na.rm = T),
losing_pct = round(mean(first_letter == "L", na.rm = T),4)) %>%
ungroup() %>%
left_join(player_df %>% select(username, N_participations, fed, title, rating_best,best_Place, median_score, max_score, total_games_played)) %>%
arrange(desc(total_losses)) %>%
slice_head(n=10) %>%
select(hero_name, fed, title, losing_pct, total_losses, total_games_played, N_participations, rating_best, best_Place, median_score, max_score)
matches_df %>%
group_by(username, hero_name) %>%
summarize(total_losses = sum(first_letter == "L", na.rm = T),
losing_pct = round(mean(first_letter == "L", na.rm = T),4)) %>%
ungroup() %>%
left_join(player_df %>% select(username, N_participations, fed, title, rating_best,best_Place, median_score, max_score, total_games_played)) %>%
arrange(desc(total_losses)) %>%
slice_head(n=10) %>%
select(hero_name, fed, title, losing_pct, total_losses, total_games_played, N_participations, rating_best, best_Place, median_score, max_score)
?kable
library(scales)
results_df %>%
#  filter(username %in% player_df_50_games) %>%
pivot_longer(cols = -c(username, games_w_White, games_w_Black)) %>%
mutate(win_white_pct = percent(value / games_w_White, accuracy = 0.1),
win_black_pct = percent(value / games_w_Black, accuracy = 0.1),
lose_white_pct = percent(value / games_w_White, accuracy = 0.1),
lose_black_pct = percent(value / games_w_Black, accuracy = 0.1))
player_df %>% select(name, title, fed, N_1st, N_participations) %>%
mutate(winning_pct = percent(N_1st / N_participations, accuracy = 1)) %>%
arrange(desc(N_1st)) %>%
filter(N_1st > 3)
player_df %>% select(name, title, fed, N_1st, N_participations) %>%
mutate(winning_pct = percent(N_1st / N_participations, accuracy = 0.1)) %>%
arrange(desc(N_1st)) %>%
filter(N_1st > 3)
TT %>% group_by(file_name) %>%
filter(score == max(score)) %>%
count(file_name) %>% ungroup() %>%
count(n) %>%
mutate(percent = percent((nn / sum(nn) * 100), accuracy = 0.1))
TT %>% group_by(file_name) %>%
filter(score == max(score)) %>%
count(file_name) %>% ungroup() %>%
count(n) %>%
mutate(percent = percent((nn / sum(nn)), accuracy = 0.1))
most_wins <- matches_df %>%
group_by(username, hero_name) %>%
summarize(total_wins = sum(first_letter == "W", na.rm = T),
winning_pct = percent(mean(first_letter == "W", na.rm = T), accuracy = 0.1)) %>%
ungroup() %>%
left_join(player_df %>% select(username, N_participations, fed, title, total_games_played)) %>%
arrange(desc(total_wins)) %>%
slice_head(n=10) %>%
select(hero_name, fed, title, total_wins, winning_pct, total_games_played, N_participations)
kable(most_wins)
# load helper functions
source("../R/2_helper_functions.R")
# load the tidyverse
library(tidyverse)
library(patchwork)     # combine charts together
library(DT)            # interactive tables
library(knitr)         # static table with the kable() function
library(plotly)        # interactive graphs
library(xlsx)          # to load the excel file
library(scales)        # for percentage formatting
# Read the clean dataset
TT <- readRDS(file = "../input/2024_df_RDS/TitledTuesday_2024_df.RDS")
player_df <- readRDS(file = "../input/2024_df_RDS/player_2024_df.RDS")
matches_df <- readRDS(file = "../input/2024_df_RDS/matches_2024_df.RDS")
results_df <- readRDS(file = "../input/2024_df_RDS/results_2024_df.RDS")
tournament_streak <- readRDS(file = "../input/2024_df_RDS/tournament_streak_2024_df.RDS")
winning_streak <- readRDS(file = "../input/2024_df_RDS/winning_streak_2024_df.RDS")
week_streak <- readRDS(file = "../input/2024_df_RDS/week_streak_2024_df.RDS")
most_participations <- player_df %>% select(name, title, fed,  N_participations, total_games_played) %>%
arrange(desc(N_participations)) %>%
slice_head(n=10)
kable(most_participations)
longest_participation_streak <- tournament_streak  %>%
left_join(player_df %>% select(name, N_participations)) %>%
slice_head(n=10)
kable(longest_participation_streak)
most_wins <- matches_df %>%
group_by(username, hero_name) %>%
summarize(total_wins = sum(first_letter == "W", na.rm = T),
winning_pct = percent(mean(first_letter == "W", na.rm = T), accuracy = 0.1)) %>%
ungroup() %>%
left_join(player_df %>% select(username, N_participations, fed, title, total_games_played)) %>%
arrange(desc(total_wins)) %>%
slice_head(n=10) %>%
select(hero_name, fed, title, total_wins, winning_pct, total_games_played, N_participations)
kable(most_wins)
winning_percentages %>%
filter(username != "howitzer14") %>%
filter(games_w_White >= 50,
result_color == "win_White") %>%
arrange(desc(win_white_pct)) %>%
left_join(player_df %>% select(username, name, title, fed)) %>%
select(username, name, games_w_White, win_white_pct, title, fed) %>%
slice_head(n=10)
winning_percentages %>%
filter(username != "howitzer14") %>%
filter(games_w_Black >= 50,
result_color == "win_Black") %>%
arrange(desc(win_black_pct)) %>%
left_join(player_df %>% select(username, name, title, fed)) %>%
select(username, name, games_w_Black, win_black_pct, title, fed) %>%
slice_head(n=10)
losing_percentages %>%
filter(username != "howitzer14") %>%
filter(games_w_Black >= 50,
result_color == "lose_Black") %>%
arrange(lose_black_pct) %>%
left_join(player_df %>% select(username, name, title, fed)) %>%
select(username, name, games_w_Black, lose_black_pct, title, fed) %>%
slice_head(n=15)
losing_percentages %>%
filter(username != "howitzer14") %>%
filter(games_w_White >= 50,
result_color == "lose_White") %>%
arrange(lose_white_pct) %>%
left_join(player_df %>% select(username, name, title, fed)) %>%
select(username, name, games_w_White, lose_white_pct, title, fed) %>%
slice_head(n=10)
games_color <- results_df %>%
#  filter(username %in% player_df_50_games) %>%
pivot_longer(cols = -c(username, games_w_White, games_w_Black)) %>%
mutate(win_white_pct = percent(value / games_w_White, accuracy = 0.1),
win_black_pct = percent(value / games_w_Black, accuracy = 0.1),
lose_white_pct = percent(value / games_w_White, accuracy = 0.1),
lose_black_pct = percent(value / games_w_Black, accuracy = 0.1))
games_color
games_color <- results_df %>%
#  filter(username %in% player_df_50_games) %>%
pivot_longer(cols = -c(username, games_w_White, games_w_Black)) %>%
mutate(win_white_pct = percent(value / games_w_White, accuracy = 0.1),
win_black_pct = percent(value / games_w_Black, accuracy = 0.1),
lose_white_pct = percent(value / games_w_White, accuracy = 0.1),
lose_black_pct = percent(value / games_w_Black, accuracy = 0.1))
names(games_color)[4] <- "result_color"
games_color
winning_percentages <- games_color %>% filter(result_color %in% c("win_White", "win_Black"))
winning_percentages
winning_percentages %>%
filter(username != "howitzer14") %>%
filter(games_w_White >= 50,
result_color == "win_White") %>%
arrange(desc(win_white_pct)) %>%
left_join(player_df %>% select(username, name, title, fed)) %>%
select(username, name, games_w_White, win_white_pct, title, fed)
winning_percentages %>%
filter(username != "howitzer14") %>%
filter(games_w_White >= 50,
result_color == "win_White") %>%
arrange(desc(win_white_pct)) %>%
left_join(player_df %>% select(username, name, title, fed)) %>%
select(username, name, games_w_White, win_white_pct, title, fed) %>%
head(n=10)
winning_percentages %>%
filter(username != "howitzer14") %>%
filter(games_w_White >= 50,
result_color == "win_White") %>%
arrange(desc(win_white_pct)) %>%
left_join(player_df %>% select(username, name, title, fed)) %>%
select(name, games_w_White, win_white_pct, title, fed) %>%
head(n=10)
winning_percentages %>%
filter(username != "howitzer14") %>%
filter(games_w_Black >= 50,
result_color == "win_Black") %>%
arrange(desc(win_black_pct)) %>%
left_join(player_df %>% select(username, name, title, fed)) %>%
select(name, games_w_Black, win_black_pct, title, fed) %>%
head(n=10)
winning_percentages %>%
filter(username != "howitzer14") %>%
filter(games_w_Black >= 50,
result_color == "win_Black")
winning_percentages %>%
filter(username != "howitzer14") %>%
filter(games_w_Black >= 50,
result_color == "win_Black") %>%
arrange(desc(win_black_pct))
View(.Last.value)
games_color <- results_df %>%
#  filter(username %in% player_df_50_games) %>%
pivot_longer(cols = -c(username, games_w_White, games_w_Black)) %>%
mutate(win_white_pct = round(value / games_w_White, 4),
win_black_pct = round(value / games_w_Black, 4),
lose_white_pct = round(value / games_w_White, 4),
lose_black_pct = round(value / games_w_Black, 4))
names(games_color)[4] <- "result_color"
winning_percentages <- games_color %>% filter(result_color %in% c("win_White", "win_Black"))
winning_percentages %>%
filter(username != "howitzer14") %>%
filter(games_w_White >= 50,
result_color == "win_White") %>%
arrange(desc(win_white_pct)) %>%
left_join(player_df %>% select(username, name, title, fed)) %>%
select(name, games_w_White, win_white_pct, title, fed) %>%
mutate(win_white_pct = percent(win_white_pct, accuracy = 0.1)) %>%
head(n=10)
winning_percentages %>%
filter(username != "howitzer14") %>%
filter(games_w_Black >= 50,
result_color == "win_Black") %>%
arrange(desc(win_black_pct)) %>%
left_join(player_df %>% select(username, name, title, fed)) %>%
select(name, games_w_Black, win_black_pct, title, fed) %>%
mutate(win_white_pct = percent(win_black_pct, accuracy = 0.1)) %>%
head(n=10)
losing_percentages %>%
filter(username != "howitzer14") %>%
filter(games_w_White >= 50,
result_color == "lose_White") %>%
arrange(lose_white_pct) %>%
left_join(player_df %>% select(username, name, title, fed)) %>%
select(username, name, games_w_White, lose_white_pct, title, fed) %>%
mutate(win_white_pct = percent(lose_white_pct, accuracy = 0.1)) %>%
slice_head(n=10)
losing_percentages %>%
filter(username != "howitzer14") %>%
filter(games_w_Black >= 50,
result_color == "lose_Black") %>%
arrange(lose_black_pct) %>%
left_join(player_df %>% select(username, name, title, fed)) %>%
select(username, name, games_w_Black, lose_black_pct, title, fed) %>%
mutate(lose_black_pct = percent(lose_black_pct, accuracy = 0.1)) %>%
slice_head(n=10)
prop.test(x = c(10, 40), n = c(90, 299), correct = FALSE)
90*0.111
winning_percentages %>%
filter(username != "howitzer14") %>%
filter(games_w_White >= 50,
result_color == "win_White") %>%
arrange(desc(win_white_pct)) %>%
left_join(player_df %>% select(username, name, title, fed)) %>%
select(name, games_w_White, win_white_pct, title, fed) %>%
mutate(win_white_pct = percent(win_white_pct, accuracy = 0.1)) %>%
head(n=10)
games_color <- results_df %>%
#  filter(username %in% player_df_50_games) %>%
pivot_longer(cols = -c(username, games_w_White, games_w_Black)) %>%
mutate(win_white_pct = round(value / games_w_White, 4),
win_black_pct = round(value / games_w_Black, 4),
lose_white_pct = round(value / games_w_White, 4),
lose_black_pct = round(value / games_w_Black, 4))
names(games_color)[4] <- "result_color"
winning_percentages <- games_color %>% filter(result_color %in% c("win_White", "win_Black"))
winning_percentages
op_10_win_white2 <- winning_percentages %>%
filter(username != "howitzer14") %>%
filter(games_w_White >= 50,
result_color == "win_White") %>%
arrange(desc(win_white_pct)) %>%
left_join(player_df %>% select(username, name, title, fed)) %>%
select(name, games_w_White, win_white_pct, title, fed)
str(op_10_win_white2)
