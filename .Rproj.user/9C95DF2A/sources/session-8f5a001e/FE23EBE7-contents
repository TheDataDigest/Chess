## 0) Setup-up, load packages, clean data, save RDs files

Sys.setenv(lang = "en_US")
Sys.setlocale("LC_TIME", "English") # Important when local time is not english (as.Date() will only work on month that are identical in both languages. Like april, august, september, november in German but not december vs dezember)

# load packages
library(tidyverse)
library(readr)
library(readxl)
library(stringr)
library(stringi)
library(lubridate)
library(forcats)
library(janitor)


# 1) load and merge data ----
list_csv_files <- paste0("input/TitledTuesday_2024_csv_files/", list.files(path = "input/TitledTuesday_2024_csv_files"))

length(list_csv_files); head(list_csv_files); tail(list_csv_files)
# not in order, make sure to arrange final TT after date, early late, Number or Rank

TT_df_backup <- readr::read_csv(list_csv_files, id = "file_name")
#View(TT_df_backup)

# 2) basic mutates ----

# Input date string
TT <- TT_df_backup %>% 
  mutate(time = gsub(".*/(\\w+)-.*", "\\1", file_name),
         date_string = str_extract(file_name, "[a-zA-Z]+-\\d+-\\d+"),
         date = as.Date(x = date_string, format = "%b-%d-%Y"))

# Number of games_played
TT$games_played <- rowSums(TT[ ,9:19] != "U--")

# Clean names
TT <- TT %>% janitor::clean_names()

# Arrange TT after date, early/late, Number (final standing, ignore "rk")
TT <- TT %>% arrange(date, time, number)

# Add date_time (early vs late tournament on the same day)
TT$date_time <- paste(TT$date, TT$time, sep = "_")

# The first tournament had many draws (old system for tie braking)
TT %>% group_by(date_time) %>% count(number) %>% filter(n > 1)

TT$number[TT$date_time == "2024-02-20_early"] <- 1:length(
  TT$number[TT$date_time == "2024-02-20_early"]) # 659 number is duplicated (tie?)

# having unique positions is crucial for later player match-ups
# breaking the ties of the first tournament introduces minor inaccuracies with regards to average (number) tournament standing. 
# Other tournament
TT$number[TT$date_time == "2024-08-27_early"] <- 1:length(
  TT$number[TT$date_time == "2024-08-27_early"]) # 704 number is duplicated (tie?)

TT$number[TT$date_time == "2024-12-17_early"] <- 1:length(
  TT$number[TT$date_time == "2024-12-17_early"]) # 674 number is duplicated (tie?)

TT$number[TT$date_time == "2024-12-24_early"] <- 1:length(
  TT$number[TT$date_time == "2024-12-24_early"]) # 643 number is duplicated


# Ordering the titles of the players and extracting gender information
TT$title_ordered <- factor(TT$title, levels = c("GM", "IM", "FM", "CM", "NM", "WGM", "WIM", "WFM", "WCM", "WNM"))
TT <- TT %>% mutate(gender = ifelse(str_detect(string = TT$title, pattern = "W"), "Women", "Men"))


# Fixing non standard english alphabet names
TT$name[TT$name == "Davíð Kjartansson" & !is.na(TT$name)] <- "David Kjartansson"
TT$name[TT$name == "Gustavo Cadena Watch me on twitch fmgustavocadena" & !is.na(TT$name)] <- "Gustavo Cadena"
TT$name[TT$name == "꧁༺ɖǟɦǟʍɖɨ ֆǟռʊɖʊʟǟ༻꧂" & !is.na(TT$name)] <- "Dahamdi Sanudula"

names_check <- c(TT$name[grepl("[^A-Za-z ]", TT$name)] %>% unique(), TT$name[!stri_detect_regex(TT$name, "^[\\p{ASCII}]*$")] %>% unique()) %>% unique()

library(xlsx)
#write.xlsx(x = names_check, file = "input/names_check.xlsx")

name_translations <- read_excel(path = "input/name_translations.xlsx", sheet = 1)

# Step 1: Perform a left join between TT and name_translations
TT_translated <- TT %>%
  left_join(name_translations, by = c("name" = "original"))

# Step 2: Replace Russian names with English translations (if available)
TT <- TT_translated %>%
  mutate(name = ifelse(test = !is.na(translation), yes = translation, no = name)) %>% 
  select(-translation)


#same_name_examples <- TT %>% count(username, name, title, fed, rating) %>% group_by(name) %>% 
#  add_count() %>% filter(nn > 1) %>% arrange(name)

same_name_examples <- TT %>% count(username, name, title, fed) %>% group_by(name) %>% 
  add_count() %>% filter(nn > 1) %>% arrange(name)

# View(same_name_examples)
# 183 cases
# 62 cases if you run the code below first

View(same_name_examples)
# In most cases a player had multiple chess.com accounts when playing the titled tuesday tournament
# Usernames are unique though
# Not sure if that is true

#! Keep WorriedEgg vs yoursillykitten (Aaron Jacobson)
# keep chesskalmar and chessbaerchen
# keep leavethecannoli and norwaytoadog
# keep Eric Zhang, Erik Golubovic, Hugo Guillemette, Igor Mizinov, Ivan Sidletskyi, Joachim Solberg, Justin Liang, Karl-Emil Elmer Nielsen-Refs, Klementy Sychev, Masruri Rahman, Massinas Djabri, Miguel Munoz, Nikolaos Poupalos, Ojasva Singh, Osiel Alberto Alonso Orta, Peter Jackson, Rodrigo Espinoza Villanueva, Rohun Trakru, Ruslan Kavyev, Sargis Manukyan, Sathvik Adiga, Visakh NR, William Safranek, Zuzanna Kaminska


# change ChessPlayer-24 to Zeitnot30 (both Alberto Atoyan)
TT$username[TT$username == "ChessPlayer-24"] <- "Zeitnot30"
TT$username[TT$username == "yscavok"] <- "sakkikuska"
TT$fed[TT$username == "sakkikuska"] <- "HUN"
TT$username[TT$username == "ClauSanLuis"] <- "ClauAmura"
TT$username[TT$username == "Ditman2007"] <- "DitmanSolo"
TT$username[TT$username == "JM2005GM"] <- "JM05C"
TT$username[TT$username == "The_Chess_Coach"] <- "PawnStorn"
TT$username[TT$username == "FREZZY23"] <- "MinaWael23"
TT$username[TT$username == "Pragmatist237"] <- "lucena125"
TT$username[TT$username == "RaunakSadhwani2005"] <- "champ2005"
TT$username[TT$username == "chessland2004"] <- "rookpower2004"
TT$username[TT$username == "TokyoVice"] <- "Thomas_RR"
TT$username[TT$username == "MusashiStyle"] <- "Beltraxtor"

# if NA put username to name
# Put username into NA-name cases
# sum(is.na(TT$name))
TT$name[is.na(TT$name)] <- TT$username[is.na(TT$name)]
#! FriederichGazel is not Daniel Rangel (DEU vs BRA) # important for the streak, different rating

# Fix username (most often used one)
username_name <- TT %>% count(username, name) %>% count(name) %>% filter(n > 1) %>% pull(name) # 79 cases

username_fix <- TT %>% filter(name %in% username_name) %>% 
  count(name, username) %>% 
  arrange(name, desc(n)) %>% 
  group_by(name) %>% 
  slice_head(n = 1) %>% ungroup() %>% select(-n)

names(username_fix)[2] <- "username2"

TT <- TT %>% left_join(username_fix, by = "name")
TT$username2[is.na(TT$username2)] <- TT$username[is.na(TT$username2)]

# Fixing players that have multiple usernames, feds, titles, names
username_name <- TT %>% count(username, name) %>% 
  count(username) %>% filter(n > 1) %>% pull(username)
# 0 cases

# function, fix name/username, user fed, that is most common? add_count()
#TT %>% count(username) %>% filter(username %in% username_tests) %>% arrange(desc(n))

name_fix <- TT %>% filter(username %in% username_name) %>% 
  count(username, name) %>%  
  mutate(name_length = nchar(name)) %>% 
  arrange(username, desc(name_length)) %>% 
  group_by(username) %>% 
  slice_head(n = 1) %>% ungroup() %>% select(-n, -name_length)

names(name_fix)[2] <- "name2"

TT <- TT %>% left_join(name_fix, by = "username")
TT$name2[is.na(TT$name2)] <- TT$name[is.na(TT$name2)]

# TT %>% filter(is.na(name)) %>% select(username,name, name2)

# TT$username[is.na(TT$name2)]
# 454 name NAs remaining, overwrite with username!
TT$name2[is.na(TT$name2)] <- TT$username[is.na(TT$name2)]

TT %>% count(username, name2) %>% count(username) %>% filter(n > 1) # A tibble: 0 x 2, success!

# Fixing titles (some players might gain a better title throughout 2024, but I only use the best title)
username_title <- TT %>% count(username, title_ordered) %>% count(username) %>% filter(n > 1) %>% pull(username) # 58 cases

title_fix <- TT %>% filter(username %in% username_title) %>% 
  group_by(username, title_ordered) %>% 
  select(username, title_ordered) %>% distinct() %>% 
  ungroup() %>% 
  arrange(username, title_ordered) %>% 
  group_by(username) %>% 
  slice_head(n = 1) %>% ungroup()

names(title_fix)[2] <- "title2"

TT <- TT %>% left_join(title_fix, by = "username")
TT$title2[is.na(TT$title2)] <- TT$title[is.na(TT$title2)]

# Fix fed (sort by most common, add_count)
username_fed <- TT %>% count(username, fed) %>% count(username) %>% filter(n > 1) %>% pull(username) # again 55 cases, 29 cases after fixing name and usernames

fed_fix <- TT %>% filter(username %in% username_fed) %>% 
  count(username, fed) %>% 
  arrange(username, desc(n)) %>% 
  group_by(username) %>% 
  slice_head(n = 1) %>% ungroup() %>% select(-n)

names(fed_fix)[2] <- "fed2"

TT <- TT %>% left_join(fed_fix, by = "username")
TT$fed2[is.na(TT$fed2)] <- TT$fed[is.na(TT$fed2)]

# Replacing original variables and removing the temporary variables
TT$name <- TT$name2
TT$name2 <- NULL

TT$title <- TT$title2
TT$title2 <- NULL

TT$fed <- TT$fed2
TT$fed2 <- NULL

TT$username <- TT$username2
TT$username2 <- NULL

# manual FED changes of some players
TT$fed[TT$name == "Christopher Woojin Yoo"] <- "USA"
TT$fed[TT$name == "Maxim Omariev"] <- "RUS"
TT$fed[TT$name == "Nihal Sarin"] <- "IND"
TT$fed[TT$name == "Pranesh M"] <- "IND"
TT$fed[TT$name == "Ruslan Kavyev"] <- "RUS"
TT$fed[TT$name == "Ruslan Kavyev"] <- "RUS"


# Adding prize money information (money amount payed to the first places)
# ignoring the $100 payed to the highest placed female
prize_money <- data.frame(number = 1:5,
                          prize = c(1000, 750, 350, 200, 100))

TT <- TT %>% left_join(prize_money, by = "number")
TT$prize2 <- TT$prize
TT$prize2[is.na(TT$prize2)] <- 0

TT$name <- gsub(pattern = "malakismayil", replacement = "Malak Ismayil", x = TT$name)
TT$name <- gsub(pattern = "Padmini Rout", replacement = "Rout Padmini", x = TT$name)
TT$name <- gsub(pattern = "BOZNENA PIDDUBNA", replacement = "Bozhena Piddubna", x = TT$name)
TT$name <- gsub(pattern = "Nhung Hong Nguyen", replacement = "Nguyen Hong Nhung", x = TT$name)
TT$name <- gsub(pattern = "Guldona Karimov", replacement = "Guldona Karimova", x = TT$name)
TT$name <- gsub(pattern = "Phuong Hanh Luong", replacement = "Luong Phuong Hanh", x = TT$name)
TT$name <- gsub(pattern = "AFRUZA Khamdamova", replacement = "Afruza Khamdamova", x = TT$name, ignore.case = FALSE)
TT$name <- gsub(pattern = "Kler Çaku", replacement = "Kler Caku", x = TT$name)
TT$name <- gsub(pattern = "Wiktoria Śmietańska", replacement = "Wiktoria Smietanska", x = TT$name)
TT$name <- gsub(pattern = "Irene Sukandar", replacement = "Irine Kharisma Sukandar", x = TT$name)

top_100_women <- c("Alexandra Kosteniuk","Aleksandra Goryachkina","Polina Shuvalova","Meri Arabidze","Aleksandra Maltsevskaya","Karina Ambartsumova","Anna M. Sargsyan","Gulrukhbegim Tokhirjonova","Le Thao Nguyen Pham","Jiner Zhu","Anastasia Avramidou","Veronika Shubenkova","Afruza Khamdamova","Ekaterina Goltseva","Malak Ismayil","Atousa Pourkashiyan","Kalyani Sirin","Yuliia Osmak","Megan Althea Paragua","Rout Padmini","Anna Shukhman","Bozhena Piddubna","Galina Novikova","Liwia Jarocka","Nguyen Hong Nhung","Ekaterini Pavlidou","Diana Preobrazhenskaya","Anna Kubicka","Guldona Karimova","Katarzyna Dwilewicz","Maria Teresa Jimenez Salas","Zeinep Sultanbek","Lile Koridze","Trisha Kanyamarala","Liya Kurmangaliyeva","Olga Matveeva","Lala Huseynova","Veronika Minina","Luong Phuong Hanh","Swara Lakshmi Nair", "Anastasia Bodnaruk", "Kler Caku", "Saadat Bashirli", "Teodora Injac", "Keti Tsatsalashvili", "Anastasiia Hnatyshyn", "Wiktoria Smietanska", "Jemal Ovezdurdyyeva", "Olga Badelka", "Alisa Genrietta Yunker", "Guadalupe Montano Vicente","Shubhi Gupta", "Elnaz Kaliakhmet", "Daria Zaichenko", "Zoey Tang", "Thalia Cervantes Landeiro","Margarita Novikova", "Maya Porozhnyak", "Elis Denele Dicen", "Sivanesan Nithyalakshmi", "T H D Niklesha Tharushi", "Svetlana Vifleemskaia", "Sofia Blokhin", "Aleksandra Tarnowska", "Mrudul Dehankar", "Nurai Sovetbekova", "Margarita Filippova", "Ana Kuchava", "Arina Kiseleva", "Rebeca Jimenez Fernandez", "Sujana Lohani", "Alena Nikulina", "Valentina Golubenko", "Mai Narva", "Olga Yushko", "Maftuna Bobomurodova", "Anusha Subramanian", "Anastasia Travkina", "Viktoriya Tarasova", "Enkhrii Enkh-Amgalan", "Tatjana Vasilevich", "Cyrielle Monpeurt", "Savitha Shri B", "Gergana Peycheva", "Turkan Mamedjarova", "Salomeja Zaksaite", "Nadya Toncheva", "Diana Mirza", "Dila Baloglu", "Kelsey Liu", "Polina A Smirnova", "Katharina Reinecke", "Irine Kharisma Sukandar", "Bibisara Assaubayeva", "Ishvi Aggarwal", "Ewa Barwinska", "Maria Larina", "Alexandra Afanasieva", "Daria Yurasova", "Marya Demina")

TT$gender[TT$name %in% top_100_women] <- "Women"

saveRDS(object = TT, file = "input/2024_df_RDS/TitledTuesday_2024_df.RDS")
